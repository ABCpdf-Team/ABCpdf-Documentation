<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><title>ZZ Elements AnnotationAdditionalActionsElement Constructor Function</TITLE>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="../../../../mystyles.css">
<link rel="stylesheet" href="../../../../prism.css">
<script src="../../../../prism.js"></script>
<META content="MSHTML 6.00.6000.16809" name=GENERATOR></HEAD>
<BODY bgColor=#ffffff>
<TABLE cellSpacing=4 cellPadding=0 border=0>
  <TBODY>
  <TR>
    <TD vAlign=top><IMG height=60 src="../../../../images/goo.gif" width=58></TD>
    <TD width=14>&nbsp;</TD>
    <TD>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD class=pageheader>AnnotationAdditionalActionsElement Function</TD>
          <TD width=60>&nbsp;</TD>
          <TD>&nbsp;</TD></TR>
        <TR>
          <TD background="../../../../images/steel-line-3.gif" height=11></TD>
          <TD width=60 background="../../../../images/steel-line-3.gif" 
          height=11></TD>
          <TD height=11><IMG height=11 src="../../../../images/steel-blob-11.gif" 
            width=11></TD></TR>
        <TR>
          <TD>
            <P>Create a new <a href="../default.htm">AnnotationAdditionalActionsElement</a>.</P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../../images/steel-pin.gif" width=64><BR>Syntax</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD vAlign=top>
            <P><SPAN class=language>[C#]</SPAN><BR>
            <CODE> <a href="../default.htm">AnnotationAdditionalActionsElement</a>()<br> <a href="../default.htm">AnnotationAdditionalActionsElement</a>(Atom atom, IndirectObject host)<br> <a href="../default.htm">AnnotationAdditionalActionsElement</a>(IndirectObject obj)<br> <a href="../default.htm">AnnotationAdditionalActionsElement</a>(<a href="../../../01-base/1086-element/default.htm">Element</a> relation, CreationOptions options)<BR>
            </CODE><BR><SPAN class=language>[Visual Basic]</SPAN><BR>
            <CODE><a href="../default.htm">AnnotationAdditionalActionsElement</a>()<br><a href="../default.htm">AnnotationAdditionalActionsElement</a>(atom As Atom, host As IndirectObject)<br><a href="../default.htm">AnnotationAdditionalActionsElement</a>(obj As IndirectObject)<br><a href="../default.htm">AnnotationAdditionalActionsElement</a>(relation As <a href="../../../01-base/1086-element/default.htm">Element</a>, options As CreationOptions)<BR>
            </CODE>
			</P>
			
			
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../../images/steel-pin.gif" width=64><BR>Params</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD vAlign=top>
            <TABLE class=wsgtable borderColor=#ffffff cellSpacing=0 
            cellPadding=3 border=5>
              <TBODY>
              <TR>
                <TD align=middle><B>Name</B></TD>
                <TD><B>Description</B></TD></TR>
              <TR vAlign=top>
                <TD align=middle>atom</TD>
                <TD>The Atom to be assigned to this <a href="../../../01-base/1086-element/default.htm">Element</a>.</TD>
              </TR>
<TR vAlign=top>
                <TD align=middle>host</TD>
                <TD>An IndirectObject. This can be any IndirectObject from the Soup but ideally should be one closely associated with the Atom.</TD>
              </TR>
<TR vAlign=top>
                <TD align=middle>obj</TD>
                <TD>The IndirectObject to be assigned to this <a href="../../../01-base/1086-element/default.htm">Element</a>.</TD>
              </TR>
<TR vAlign=top>
                <TD align=middle>relation</TD>
                <TD>An <a href="../../../01-base/1086-element/default.htm">Element</a>. This can be any <a href="../../../01-base/1086-element/default.htm">Element</a> in the Soup but ideally should be one closely associated with this <a href="../../../01-base/1086-element/default.htm">Element</a>.</TD>
              </TR>
<TR vAlign=top>
                <TD align=middle>options</TD>
                <TD>Options related to creation. For example this allows you to determine whether the <a href="../../../01-base/1086-element/default.htm">Element</a> should be created using an IndirectObject rather than just an Atom. If not provided a default set of options is used.</TD>
              </TR>
</TBODY></TABLE>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../../images/steel-pin.gif" width=64><BR>Notes</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            
<p>Create a new <a href="../default.htm">AnnotationAdditionalActionsElement</a>.</p>
<p>The different constructors allow different ways of creating an <a href="../../../01-base/1086-element/default.htm">Element</a>. Some are used for wrapping existing Atoms or IndirectObjects and others are for creating new ones.</p>
<p>The constructor taking a relation <a href="../../../01-base/1086-element/default.htm">Element</a> creates a new object in the document - it is typically the constructor you will want to use. Do not specify creation options unless you have very specific needs.</p>
<p>However for your first <a href="../../../01-base/1086-element/default.htm">Element</a> - one you can use as a relation for the others - you will need to wrap an existing IndirectObject inside an <a href="../../../01-base/1086-element/default.htm">Element</a>. For this you might use code of the following form "<a href="../../../07-syntax/1081-catalogelement/default.htm">CatalogElement</a> root =  new <a href="../../../07-syntax/1081-catalogelement/default.htm">CatalogElement</a>(doc.ObjectSoup.Catalog)".</p>
<p>The parameterless constructor allows you to create an empty <a href="../../../01-base/1086-element/default.htm">Element</a>. By empty we mean it has no contents - no Atom within it. So before use an Atom must be Assigned or Created. In practice it is easiest to do this using one of the other constructors.</p>
<p>The atom and host constructor is used to wrap an existing Atom. It creates an <a href="../../../01-base/1086-element/default.htm">Element</a> and then Assigns the Atom to it. The result is a specialized <a href="../../../01-base/1086-element/default.htm">Element</a> which can be used to examine or modify the contents of the Atom.</p>


<p>The CreationOptions enumeration may take the following values:</p>
<ul>
<li>Default - Default creation options for this particular type of <a href="../../../01-base/1086-element/default.htm">Element</a>.</li>
<li>Indirect - Create <a href="../../../01-base/1086-element/default.htm">Element</a> containing an IndirectObject.</li>
<li>Direct - Create <a href="../../../01-base/1086-element/default.htm">Element</a> containing an Atom.</li>
</ul>


            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../../images/steel-pin.gif" width=64><BR>Example</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>This code snippet is taken from Annotations.cs line 1584 in the Annotations example project.</P>
<P><SPAN class=language>[C#]</SPAN><BR><pre><code class="language-csharp">bool isUrl = filePathOrUrl.StartsWith(&quot;http://&quot;, StringComparison.OrdinalIgnoreCase)
&nbsp;&nbsp;|| filePathOrUrl.StartsWith(&quot;https://&quot;, StringComparison.OrdinalIgnoreCase)
&nbsp;&nbsp;|| filePathOrUrl.StartsWith(&quot;rtmp://&quot;, StringComparison.OrdinalIgnoreCase);
if (contentType == null) {
&nbsp;&nbsp;int end = -1;
&nbsp;&nbsp;if (isUrl)
&nbsp;&nbsp;&nbsp;&nbsp;end = filePathOrUrl.IndexOfAny(new char[] { &#39;?&#39;, &#39;#&#39; });
&nbsp;&nbsp;if (end &lt; 0)
&nbsp;&nbsp;&nbsp;&nbsp;end = filePathOrUrl.Length;
&nbsp;&nbsp;contentType = GetContentType(filePathOrUrl, end);
&nbsp;&nbsp;if (contentType == null)
&nbsp;&nbsp;&nbsp;&nbsp;throw new NotSupportedException(&quot;Movie content type is not supported.&quot;);
}

<a href="../../1415-screenannotationelement/default.htm">ScreenAnnotationElement</a> annot = new <a href="../../1415-screenannotationelement/default.htm">ScreenAnnotationElement</a>(AnnotationElement.Object);
annot.EntrySubtype = &quot;Screen&quot;;
annot.EntryRect = new <a href="../../../07-syntax/0017-rectangleelement/default.htm">RectangleElement</a>(ArrayAtom.FromXRect(new XRect(rect)), annot.Host);

<a href="../../../07-syntax/1110-fullfilespecificationelement/default.htm">FullFileSpecificationElement</a> fileSpec = new <a href="../../../07-syntax/1110-fullfilespecificationelement/default.htm">FullFileSpecificationElement</a>(annot);
fileSpec.EntryType = &quot;Filespec&quot;;
if (isUrl) {
&nbsp;&nbsp;fileSpec.EntryFS = &quot;URL&quot;;
&nbsp;&nbsp;fileSpec.EntryF = filePathOrUrl;
}
else {
&nbsp;&nbsp;FileInfo fileInfo = new FileInfo(filePathOrUrl);
&nbsp;&nbsp;fileSpec.EntryF = fileInfo.Name;
&nbsp;&nbsp;fileSpec.EntryUF = fileInfo.Name;
&nbsp;&nbsp;fileSpec.EntryEF = new <a href="../../../07-syntax/1111-embeddedfilesetelement/default.htm">EmbeddedFileSetElement</a>(annot);
&nbsp;&nbsp;fileSpec.EntryEF.EntryF = EmbedFileStream(fileInfo);
}

<a href="../../../13-multimedia/1500-mediaclipdataelement/default.htm">MediaClipDataElement</a> mediaClip = new <a href="../../../13-multimedia/1500-mediaclipdataelement/default.htm">MediaClipDataElement</a>(annot, CreationOptions.Indirect);
mediaClip.EntryS = &quot;MCD&quot;;
mediaClip.EntryP = new <a href="../../../13-multimedia/1502-mediapermissionselement/default.htm">MediaPermissionsElement</a>(annot);
mediaClip.EntryP.EntryTF = &quot;TEMPACCESS&quot;;
mediaClip.EntryCT = contentType;
mediaClip.EntryD = fileSpec;

<a href="../../../13-multimedia/1499-mediarenditionelement/default.htm">MediaRenditionElement</a> rendition = new <a href="../../../13-multimedia/1499-mediarenditionelement/default.htm">MediaRenditionElement</a>(annot, CreationOptions.Indirect);
rendition.EntryS = &quot;MR&quot;;
rendition.EntryC = mediaClip;

<a href="../../1436-renditionactionelement/default.htm">RenditionActionElement</a> pageVisibleAction = new <a href="../../1436-renditionactionelement/default.htm">RenditionActionElement</a>(annot, CreationOptions.Indirect);
pageVisibleAction.EntryS = &quot;Rendition&quot;;
pageVisibleAction.EntryOP = 4;
pageVisibleAction.EntryAN = annot;
pageVisibleAction.EntryR = rendition;

annot.EntryAA = new <a href="../default.htm">AnnotationAdditionalActionsElement</a>(annot);
annot.EntryAA.EntryPV = pageVisibleAction;
<a href="../../1391-annotationelement/default.htm">AnnotationElement</a> = annot;
</code></pre></P>
<P><SPAN class=language>[VB]</SPAN><BR><pre><code class="language-vbnet">Dim isUrl As Boolean = filePathOrUrl.StartsWith(&quot;http://&quot;, StringComparison.OrdinalIgnoreCase) OrElse filePathOrUrl.StartsWith(&quot;https://&quot;, StringComparison.OrdinalIgnoreCase) OrElse filePathOrUrl.StartsWith(&quot;rtmp://&quot;, StringComparison.OrdinalIgnoreCase)
If contentType Is Nothing Then
&nbsp;&nbsp;Dim [end] As Integer = -1
&nbsp;&nbsp;If isUrl Then
&nbsp;&nbsp;&nbsp;&nbsp;[end] = filePathOrUrl.IndexOfAny(New Char() { &quot;?&quot;c, &quot;#&quot;c })
&nbsp;&nbsp;End If
&nbsp;&nbsp;If [end] &lt; 0 Then
&nbsp;&nbsp;&nbsp;&nbsp;[end] = filePathOrUrl.Length
&nbsp;&nbsp;End If
&nbsp;&nbsp;contentType = GetContentType(filePathOrUrl, [end])
&nbsp;&nbsp;If contentType Is Nothing Then
&nbsp;&nbsp;&nbsp;&nbsp;Throw New NotSupportedException(&quot;Movie content type is not supported.&quot;)
&nbsp;&nbsp;End If
End If

Dim annot As New <a href="../../1415-screenannotationelement/default.htm">ScreenAnnotationElement</a>(AnnotationElement.Object)
annot.EntrySubtype = &quot;Screen&quot;
annot.EntryRect = New <a href="../../../07-syntax/0017-rectangleelement/default.htm">RectangleElement</a>(ArrayAtom.FromXRect(New XRect(rect)), annot.Host)

Dim fileSpec As New <a href="../../../07-syntax/1110-fullfilespecificationelement/default.htm">FullFileSpecificationElement</a>(annot)
fileSpec.EntryType = &quot;Filespec&quot;
If isUrl Then
&nbsp;&nbsp;fileSpec.EntryFS = &quot;URL&quot;
&nbsp;&nbsp;fileSpec.EntryF = filePathOrUrl
Else
&nbsp;&nbsp;Dim fileInfo As New FileInfo(filePathOrUrl)
&nbsp;&nbsp;fileSpec.EntryF = fileInfo.Name
&nbsp;&nbsp;fileSpec.EntryUF = fileInfo.Name
&nbsp;&nbsp;fileSpec.EntryEF = New <a href="../../../07-syntax/1111-embeddedfilesetelement/default.htm">EmbeddedFileSetElement</a>(annot)
&nbsp;&nbsp;fileSpec.EntryEF.EntryF = EmbedFileStream(fileInfo)
End If

Dim mediaClip As New <a href="../../../13-multimedia/1500-mediaclipdataelement/default.htm">MediaClipDataElement</a>(annot, CreationOptions.Indirect)
mediaClip.EntryS = &quot;MCD&quot;
mediaClip.EntryP = New <a href="../../../13-multimedia/1502-mediapermissionselement/default.htm">MediaPermissionsElement</a>(annot)
mediaClip.EntryP.EntryTF = &quot;TEMPACCESS&quot;
mediaClip.EntryCT = contentType
mediaClip.EntryD = fileSpec

Dim rendition As New <a href="../../../13-multimedia/1499-mediarenditionelement/default.htm">MediaRenditionElement</a>(annot, CreationOptions.Indirect)
rendition.EntryS = &quot;MR&quot;
rendition.EntryC = mediaClip

Dim pageVisibleAction As New <a href="../../1436-renditionactionelement/default.htm">RenditionActionElement</a>(annot, CreationOptions.Indirect)
pageVisibleAction.EntryS = &quot;Rendition&quot;
pageVisibleAction.EntryOP = 4
pageVisibleAction.EntryAN = annot
pageVisibleAction.EntryR = rendition

annot.EntryAA = New <a href="../default.htm">AnnotationAdditionalActionsElement</a>(annot)
annot.EntryAA.EntryPV = pageVisibleAction
<a href="../../1391-annotationelement/default.htm">AnnotationElement</a> = annot
</code></pre></P>

            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
<P>&nbsp;</P></BODY></HTML>
