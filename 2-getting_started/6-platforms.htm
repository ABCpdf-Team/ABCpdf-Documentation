<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>ABCpdf on Linux</title>

<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="../mystyles.css">
<link rel="stylesheet" href="../prism.css">
<script src="../prism.js"></script>
<meta content="MSHTML 6.00.6000.16788" name="GENERATOR"></head>
<body style="background-color: rgb(255, 255, 255);">
<table border="0" cellpadding="0" cellspacing="4">
<tbody>
<tr>
<td valign="top"><img src="../images/goo.gif" height="60" width="58"></td>
<td width="14">&nbsp;</td>
<td>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td class="pageheader">ABCpdf on Linux</td>
<td width="60">&nbsp;</td>
<td>&nbsp;</td>
</tr>
<tr>
<td background="../images/steel-line-3.gif" height="11"></td>
<td background="../images/steel-line-3.gif" height="11" width="60"></td>
<td height="11"><img src="../images/steel-blob-11.gif" height="11" width="11"></td>
</tr>
<tr>
<td>
<p>&nbsp;</p></td>
<td width="60">&nbsp;</td>
<td>&nbsp;</td>
</tr>
</tbody>
</table></td>
</tr>
<tr>
  <td class="sectheader" valign="top"><img src="../images/steel-pin.gif" height="10" width="64"><br>
    Intro</td>
  <td>&nbsp;</td>
  <td valign="top"><table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tbody>
      <tr>
        <td><p>The general ethos of ABCpdf is of design and development on Windows followed by deployment on Linux or Windows.</p>
          <p>&nbsp;</p></td>
        <td width="60">&nbsp;</td>
        <td width="11">&nbsp;</td>
      </tr>
    </tbody>
  </table></td>
</tr>
<tr>
  <td class="sectheader" valign="top"><img src="../images/steel-pin.gif" height="10" width="64"><br>
    Basics</td>
  <td>&nbsp;</td>
  <td valign="top"><table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tbody>
      <tr>
        <td><p>You need Ubuntu 22.04 or 24.04.</p>
              <p>If you are using WSL you need to use WSL 2. WSL version 1 is not supported</p>
              <p>By default, compared with Windows, Linux comes with a small number of fonts. You may wish to install new fonts at /usr/local/share/fonts, /usr/share/fonts or ~/.local/share/fonts.</p>
          <p>Config is held in the file system. You can select a different config file using <a href="../5-abcpdf/xsettings/1-methods/setconfigfile.htm">XSettings.SetConfigFile</a>. Temp files are held at /tmp/ABCpdf.</p>
          <p>&nbsp;</p></td>
        <td width="60">&nbsp;</td>
        <td width="11">&nbsp;</td>
      </tr>
    </tbody>
  </table></td>
</tr>
<tr>
  <td class="sectheader" valign="top"><img src="../images/steel-pin.gif" height="10" width="64"><br>
    Docker</td>
  <td>&nbsp;</td>
  <td valign="top"><table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tbody>
      <tr>
        <td><p>Docker example projects for ABCpdf may be found on GitHub.</p>
          <p>Here is an example project to show how to run ABCpdf as a containerized microservice using a Docker image based on Ubuntu 22.04 LTS. This allows in-container debugging in Visual Studio 2022 and later.</p>
          <p><a href="https://github.com/ABCpdf-Team/APCpdfLinuxContainer">ABCpdf-Team / APCpdfLinuxContainer</a></p>
          <p>You may wish to use this as a template for your own ABCpdf-powered microservice.</p>
          <p>&nbsp;</p></td>
        <td width="60">&nbsp;</td>
        <td width="11">&nbsp;</td>
      </tr>
    </tbody>
  </table></td>
</tr>
<tr>
  <td class="sectheader" valign="top"><img src="../images/steel-pin.gif" height="10" width="64"><br>
    Licenses</td>
  <td>&nbsp;</td>
  <td valign="top"><table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tbody>
      <tr>
        <td><p>There are no trial licenses created on Linux so you need to set a license in your code. </p>
              <p>At application startup simply call <a href="../5-abcpdf/xsettings/1-methods/installlicense.htm">XSettings:InstallLicense</a> with a license key. You can use a trial license key copied from the PDFSettings application on Windows or with a purchased license key.</p>
          <p>The PDFSettings application is available in the full Windows MSI installation. Download and run the MSI from our site and then look under the ABCpdf menu item for the PDFSettings app. Open it and you will see a trial license key - an alphanumeric string about a hundred characters long. You can use this in your code.</p>
          <p><img src="../images/pdfsettings.png" alt="PDFSettings Screenshot" width="574" height="579"></p>
          <p>&nbsp;</p></td>
        <td width="60">&nbsp;</td>
        <td width="11">&nbsp;</td>
      </tr>
    </tbody>
  </table></td>
</tr>
<tr>
  <td class="sectheader" valign="top"><img src="../images/steel-pin.gif" height="10" width="64"><br>
    .NET Install</td>
  <td>&nbsp;</td>
  <td valign="top"><table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tbody>
      <tr>
        <td><p>Linux does not come with the .NET runtime pre-installed. </p>
          <P>If you have not installed it and you try to publish with self-contained false, then you will get an error when you try and run the executable. Something similar to this.</P>
          <P><code class="language-html">You must install .NET to run this application.<br>
            <br>
            App: /home/pcuser/helloworld/helloworld<br>
            Architecture: x64<br>
            App host version: 6.0.22<br>
            .NET location: Not found</code></P>
          <p>Publishing with self-contained true is a good alternative if your chosen runtime is not easily available on your distro. It increases the output size by about 60 MB but provides a simple solution.</p>
          <p>Details of how to install the runtime may be found <a href="https://learn.microsoft.com/en-us/dotnet/core/install/linux">here</a>. If you are using .NET 8 you might need the following. However the process does vary by platform so you may need to check the Microsoft documentation.</p>
          <p><code class="language-html">sudo apt update<br>
            sudo apt install dotnet-runtime-8.0<br>
          </code></p>
          <p>If you are using ABCChrome then you may need to install a few extra packages. </p>
          <p><code class="language-html"># for Ubuntu 22 &amp; 23<br>
          sudo apt install -y libasound2 libnss3 libcurl4<br>
          <br>
          # for Ubuntu 24<br>
          sudo apt install -y libasound2t64 libnss3 libcurl4t64<br>
          <br>
          # for Ubuntu 22 only - not needed on 23 and 24<br>
          sudo apt install -y xserver-xorg-core --no-install-recommends --no-install-suggests<br>
          sudo apt install -y libcairo2 libatk1.0-0 libatk-bridge2.0-0 libcups2 libxcomposite1 libxdamage1 libxrandr2 libxkbcommon0 libpango-1.0-0<br>
          <!-- <br>
          # for Ubuntu 23 only<br>
          # https://packages.ubuntu.com/jammy/amd64/libicu70/download<br>
          wget http://de.archive.ubuntu.com/ubuntu/pool/main/i/icu/libicu70_70.1-2_amd64.deb -O libicu70_70.1-2_amd64.deb<br>
          sudo dpkg -i libicu70_70.1-2_amd64.deb<br>
          rm libicu70_70.1-2_amd64.deb<br>
          --></code></p>
          <p>While ABCpdf does not officially support Debian Linux, here are the additional  packages ABCChrome requires.</p>
          <p><code class="language-html"># for Debian Linux 12.7 - much the same as Ubuntu 22<br>
            sudo apt install -y libasound2 libnss3 libcurl4<br>
          sudo apt install -y xserver-xorg-core --no-install-recommends --no-install-suggests<br>
          sudo apt install -y libcairo2 libatk1.0-0 libatk-bridge2.0-0 libcups2 libxcomposite1 libxdamage1 libxrandr2 libxkbcommon0 libpango-1.0-0<br>
          # and also...<br>
          sudo apt install -y libglib2.0-0</code></p>
          <p>While ABCpdf does not officially support Fedora Linux, here are the additional  packages ABCChrome requires.</p>
          <p><code class="language-html"># for Fedora Linux 40<br>
            sudo dnf install -y alsa-lib mesa-libgbm cairo atk at-spi2-atk cups-libs libXcomposite libXdamage libXrandr pango</code></p>
          <p>As always a judicious use of ldd will reveal any other missing packages you may require. Run against  files like libABCpdf13-64.so and libChakraCore64.so but also against the ABCChrome123/ABCChrome123 executable if you are using the ABCChrome HTML engine.</p>
          <p>&nbsp;</p></td>
        <td width="60">&nbsp;</td>
        <td width="11">&nbsp;</td>
      </tr>
    </tbody>
  </table></td>
</tr>
<tr>
  <td class="sectheader" valign="top"><img src="../images/steel-pin.gif" height="10" width="64"><br>
    WSL</td>
  <td>&nbsp;</td>
  <td valign="top"><table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tbody>
      <tr>
        <td><p>If you are using WSL you must use WSL 2. WSL version 1 is not supported.</p>
          <p>WSL 2 is not fast when it comes to file access across the OS divide. Operations such as validating the ABCChrome install require checksums to be calculated on large files. These take a fraction of a second if your files are located on the same OS file system. However if they are located on the Windows file system (paths such as /mnt/c) they can take many seconds.</p>
          <p>WSL 1 is much faster here but there are parts missing from which can lead to subtle problems. For example in WSL 1 there is no range based file locking. Without file locking it is difficult to be sure that files will get synchronized correctly. Similarly WSL 1 does not support some memory mapping operations which means that some complex HTML conversion operations may fail.</p>
          <p>In many situations things will work, but when they go wrong the problems will be small and subtle and impossible to fix. That is why we do not support WSL 1.</p>
          <p>&nbsp;</p></td>
        <td width="60">&nbsp;</td>
        <td width="11">&nbsp;</td>
      </tr>
    </tbody>
  </table></td>
</tr>
<tr>
  <td class="sectheader" valign="top"><img src="../images/steel-pin.gif" height="10" width="64"><br>
    NuGet</td>
  <td>&nbsp;</td>
  <td valign="top"><table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tbody>
      <tr>
        <td><p>The ABCpdf NuGet package contains  core libraries for Windows and Linux.</p>
          <p>The standard ABCpdf NuGet package includes ABCChrome for Windows but not for Linux because the package is quite large.</p>
          <p>If you want to use ABCChrome on Linux you  need to reference the ABCpdf.ABCChrome123.Linux NuGet package as well as the ABCpdf one.</p>
          <p>If you do not do this you will get an &quot;Unable to find ABCChrome123&quot; error when you run on Linux.</p>
          <p>&nbsp;</p></td>
        <td width="60">&nbsp;</td>
        <td width="11">&nbsp;</td>
      </tr>
    </tbody>
  </table></td>
</tr>
<tr>
  <td class="sectheader" valign="top"><img src="../images/steel-pin.gif" height="10" width="64"><br>
    Deployment</td>
  <td>&nbsp;</td>
  <td valign="top"><table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tbody>
      <tr>
        <td><p>The NuGet package contains appropriate libraries but these will be specific to the platform on which you are running. To deploy to Linux you will need to do a command line publish.</p>
          <p>On your Windows computer open a Visual Studio developer command prompt and then navigate using cd to the location of your project. </p>
          <p>Here we will assume that you have a project called 'helloworld&quot;, that you have a WSL Linux installation called &quot;Ubuntu&quot; and a Linux user called &quot;pcuser&quot;. Run the following to deploy the release build to your Linux installation. Here we deploy assuming that the .NET runtime is already installed. If your chosen .NET runtime is not easily available on your distro then you might prefer to set self-contained to true.</p>
          <pre><code class="language-html">dotnet publish helloworld.csproj -r linux-x64 -c Release --self-contained false --output \\wsl.localhost\Ubuntu\home\pcuser\helloworld
</code></pre>
              <p>You  need to flag your compiled output as executable. Open up a bash shell by clicking in the Windows task bar search box and typing &quot;bash&quot;. Enter the following.</p>
          <pre><code class="language-html">cd ~/helloworld
dir # just a sanity check
sudo chmod +x helloworld
</code></pre>
              <p>If you are deploying ABCChrome then you will need to flag that too.</p>
              <pre><code class="language-html">sudo chmod +x ABCChrome123/ABCChrome123</code></pre>
              <p>Then run your executable to produce an output.</p>
              <pre><code class="language-html">./helloworld</code></pre>
              <p>&nbsp;</p></td>
        <td width="60">&nbsp;</td>
        <td width="11">&nbsp;</td>
      </tr>
    </tbody>
  </table></td>
</tr>
<tr>
  <td class="sectheader" valign="top"><img src="../images/steel-pin.gif" height="10" width="64"><br>
    Features</td>
  <td>&nbsp;</td>
  <td valign="top"><table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tbody>
      <tr>
        <td><p>Because Linux does not offer the exact same capabilities as Windows there are  some differences.</p>
              <p>In general these differences relate to legacy code support which is not required on Linux or to Windows specific features such as  MS Office interop.</p>
          <ul>
                <li>.NET 6.0+ on x64 are the supported platforms.</li>
            <li>ABCChrome123 &amp; ABCChrome117 are the only HTML conversion engines.</li>
            <li>FireShield is not available.</li>
            <li>Some read modules are not available: XpsAny,  MSOffice, OpenOffice, RichTextFormat and EmfVector.</li>
            <li>Exports which depend on WIC codecs (eg .dds, .heic, .heif, .jxr, .wdp) or will not work.</li>
            <li>EMF import and export is not supported.</li>
            <li>Different fonts will be available so font substitution will be different.</li>
            <li>There may be subtle differences in the positioning of characters on the page.</li>
            <li>There may be subtle differences in the layout of bi-directional text.</li>
            <li>The TextOperation.ShowClippedText property is not functional.</li>
            <li>3D Annotations are not rendered and appearances are not generated for them.</li>
            <li>WebGL export and embedded graphics are not supported.</li>
            <li>System.Drawing is not available on Linux, so APIs involving it do not function.</li>
            <li>The .so shared libraries are not signed because there are no mechanisms for this.</li>
            <li>The .NET cryptographic classes on Linux operate differently and with reduced functionality so some signature operations may fail.</li>
            <li>In case of error, exceptions may be different because Linux provides different error information from Windows.</li>
          </ul>
          <p>You may see  some  differences between the ABCChrome HTML conversion on Windows and Linux. In general these are related to the rather minimal set of fonts available on Linux. If you wish your Linux output to be similar to your Windows output you will need to scatter fonts liberally. However there are some other more subtle and obscure differences too.</p>
          <ul>
                <li>Form text fields may appear a slightly different width.</li>
            <li>You cannot convert from a site with an invalid SSL certificate.</li>
            <li>Images added directly - ie not inside an HTML page - may appear a different size.</li>
            </ul>
          <p>&nbsp;</p></td>
        <td width="60">&nbsp;</td>
        <td width="11">&nbsp;</td>
      </tr>
    </tbody>
  </table></td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
</body></html>