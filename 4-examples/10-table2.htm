<html>
<head>
<title>Large Table Example</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="../mystyles.css">
<link rel="stylesheet" href="../prism.css">
<script src="../prism.js"></script></head>

<body bgcolor="#FFFFFF">
<table border="0" cellpadding="0" cellspacing="4">
  <tr> 
    <td valign="top"><img src="../images/goo.gif" width="58" height="60"></td>
    <td width="14">&nbsp;</td>
    <td> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="pageheader"> Large Table Example</td>
          <td width="60">&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
        <tr> 
          <td background="../images/steel-line-3.gif" height="11"></td>
          <td background="../images/steel-line-3.gif" height="11" width="60"></td>
          <td height="11"><img src="../images/steel-blob-11.gif" width="11" height="11"></td>
        </tr>
        <tr> 
          <td> 
            <p>This example shows how to draw a multi-page table. ABCpdf does 
              not provide table drawing routines itself so this example uses a 
              Table Class to position the table elements.</p>
            <p>You can find the full project and classes under the ABCpdf menu 
              item. The project includes code for laying out a small table, a 
              large table spreading over more than one page, an invoice and a 
              product list.</p>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr> 
    <td valign="top" class="sectheader"><img src="../images/steel-pin.gif" width="64" height="10"><br>Setup</td>
    <td width="14">&nbsp;</td>
    <td valign="top"> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td> 
            <p>We start by creating our document object and reading the data for 
              our table. For the purposes of this example we'll assume that our 
              data is in a standard tab delimited format.</p>
            <p><span class="language">[C#]</span><br>
              <pre><code class="language-csharp">string text = File.ReadAllText(Server.MapPath("text7.txt"));
using var doc = new Doc();
// set up document
doc.FontSize = 12;
doc.Rect.Inset(20, 20);
</code></pre><br>
              <span class="language">[Visual Basic]</span><br>
              <pre><code class="language-vbnet">Dim theText As String = File.ReadAllText(Server.MapPath("text7.txt"))
Using doc As New Doc()
&nbsp;&nbsp;' set up document
&nbsp;&nbsp;doc.FontSize = 12
&nbsp;&nbsp;doc.Rect.Inset(20, 20)
</code></pre></p>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr> 
    <td valign="top" class="sectheader"><img src="../images/steel-pin.gif" width="64" height="10"><br>Rotate</td>
    <td width="14">&nbsp;</td>
    <td valign="top"> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td> 
            <p>We create a new table object passing in values to tell it what 
              rectangle it can occupy (it takes the current document rectangle) 
              and how many columns of data it should be prepared for. </p>
            <p>Columns are assigned relative widths and expand horizontally to 
              fit the table rectangle. Here we're specifying six columns and a 
              number of relative widths. We're padding the cells so there are 
              gaps between the rows and columns. Finally we specify a header which 
              repeats as new pages are added.</p>
            <p><span class="language">[C#]</span><br>
              <pre><code class="language-csharp">PDFTable theTable = new PDFTable(doc, 6);
// some columns extra width
theTable.SetColumnWidths(new double[] { 2, 1, 3, 2, 1, 4 });
theTable.CellPadding = 5;
theTable.RepeatHeader = true;
</code></pre><br>
              <span class="language">[Visual Basic]</span><br>
              <pre><code class="language-vbnet">&nbsp;&nbsp;Dim theTable As New PDFTable(doc, 6)
&nbsp;&nbsp;' some columns extra width
&nbsp;&nbsp;theTable.SetColumnWidths(New Double() {2, 1, 3, 2, 1, 4})
&nbsp;&nbsp;theTable.CellPadding = 5
&nbsp;&nbsp;theTable.RepeatHeader = True
</code></pre></p>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr> 
    <td valign="top" class="sectheader"><img src="../images/steel-pin.gif" width="64" height="10"><br>Add</td>
    <td width="14">&nbsp;</td>
    <td valign="top"> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td> 
            <p>We iterate through the table data adding rows and columns as we 
              go. Every time we add a row we check to see if the page number has 
              changed and restart the shading if it has. This ensures the header 
              is always unshaded. Finally we save the document.</p>
            <p><span class="language">[C#]</span><br>
              <pre><code class="language-csharp">text = text.Replace("\r\n", "\r");
string[] theRows = text.Split(new char[] { '\r' });
int thePage = 1;
bool theShade = false;
for (int i = 0; i &lt; theRows.Length; i++) {
&nbsp;&nbsp;theTable.NextRow();
&nbsp;&nbsp;string[] theCols = theRows[i].Split(new char[] { '\t' });
&nbsp;&nbsp;theTable.AddTextStyled(theCols);
&nbsp;&nbsp;if (doc.PageNumber &gt; thePage) {
&nbsp;&nbsp;&nbsp;&nbsp;thePage = doc.PageNumber;
&nbsp;&nbsp;&nbsp;&nbsp;theShade = true;
&nbsp;&nbsp;}
&nbsp;&nbsp;if (theShade)
&nbsp;&nbsp;&nbsp;&nbsp;theTable.FillRow("200 200 200", theTable.Row);
&nbsp;&nbsp;theShade = !theShade;
}
doc.Flatten();
doc.Save(Server.MapPath("table2.pdf"));
</code></pre><br>
              <span class="language">[Visual Basic]</span><br>
              <pre><code class="language-vbnet">&nbsp;&nbsp;theText = theText.Replace(vbCr &amp; vbLf, vbCr)
&nbsp;&nbsp;Dim theRows As String() = theText.Split(New Char() {ControlChars.Cr})
&nbsp;&nbsp;Dim thePage As Integer = 1
&nbsp;&nbsp;Dim theShade As Boolean = False
&nbsp;&nbsp;Dim i As Integer = 0
&nbsp;&nbsp;While i &lt; theRows.Length
&nbsp;&nbsp;&nbsp;&nbsp;theTable.NextRow()
&nbsp;&nbsp;&nbsp;&nbsp;Dim theCols As String() = theRows(i).Split(New Char() {ControlChars.Tab})
&nbsp;&nbsp;&nbsp;&nbsp;theTable.AddTextStyled(theCols)
&nbsp;&nbsp;&nbsp;&nbsp;If doc.PageNumber &gt; thePage Then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thePage = doc.PageNumber
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theShade = True
&nbsp;&nbsp;&nbsp;&nbsp;End If
&nbsp;&nbsp;&nbsp;&nbsp;If theShade Then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;theTable.FillRow("200 200 200", theTable.Row)
&nbsp;&nbsp;&nbsp;&nbsp;End If
&nbsp;&nbsp;&nbsp;&nbsp;theShade = Not theShade
&nbsp;&nbsp;&nbsp;&nbsp;System.Math.Max(System.Threading.Interlocked.Increment(i),i - 1)
&nbsp;&nbsp;End While
&nbsp;&nbsp;doc.Flatten()
&nbsp;&nbsp;doc.Save(Server.MapPath("table2.pdf"))
End Using
</code></pre></p>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr> 
    <td valign="top" class="sectheader"><img src="../images/steel-pin.gif" width="64" height="10"><br>Results</td>
    <td width="14">&nbsp;</td>
    <td valign="top"> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td> 
            <p>Using a large quantity of input data. We get the following output.</p>
            <p><img src="../images/pdf/table2.pdf.png" class="example"><br>
              table2.pdf - [Page 1]</p>
            <table width="100%" border="0" cellspacing="3" cellpadding="3">
              <tr> 
                <td><img src="../images/pdf/table2.pdf2.png" class="example"><br>
                  table2.pdf - [Page 2]</td>
                <td><img src="../images/pdf/table2.pdf3.png" class="example"><br>
                  table2.pdf - [Page 3]</td>
              </tr>
              <tr> 
                <td><img src="../images/pdf/table2.pdf4.png" class="example"><br>
                  table2.pdf - [Page 4]</td>
                <td><img src="../images/pdf/table2.pdf5.png" class="example"><br>
                  table2.pdf - [Page 5]</td>
              </tr>
            </table>
            <p>&nbsp;</p>
            <p>&nbsp;</p>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
