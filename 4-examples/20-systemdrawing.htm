<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>System.Drawing Example</TITLE>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="../mystyles.css">
<link rel="stylesheet" href="../prism.css">
<script src="../prism.js"></script>
<META content="MSHTML 6.00.2900.3268" name=GENERATOR></HEAD>
<BODY bgColor=#ffffff>
<TABLE cellSpacing=4 cellPadding=0 border=0>
  <TBODY>
  <TR>
    <TD vAlign=top><IMG height=60 src="../images/goo.gif" width=58></TD>
    <TD width=14>&nbsp;</TD>
    <TD>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD class=pageheader>System.Drawing Example</TD>
          <TD width=60>&nbsp;</TD>
          <TD>&nbsp;</TD></TR>
        <TR>
          <TD background=../images/steel-line-3.gif height=11></TD>
          <TD width=60 background=../images/steel-line-3.gif height=11></TD>
          <TD height=11><IMG height=11 src="../images/steel-blob-11.gif" 
            width=11></TD></TR>
        <TR>
          <TD>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../images/steel-pin.gif" width=64><BR>Intro</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>This example shows how to port System.Drawing code for output to 
            PDF.</P>
            <P>You may have System.Drawing code which writes output to the 
            screen or an image or to a printer. You may wish to modify this code 
            to write to a PDF. ABCpdf comes with wrapper code which can 
            significantly ease this process.</P>
            <P>You can find a full example project including the wrapper classes 
            under the ABCpdf menu item.</P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../images/steel-pin.gif" width=64><BR>Basics</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>The wrapper contains the following namespaces:</P>
            <pre><code class="language-csharp">using WebSupergoo.ABCpdf13.Drawing;
using WebSupergoo.ABCpdf13.Drawing.Drawing2D;
using WebSupergoo.ABCpdf13.Drawing.Text;
</code></pre>
            <P>These contain classes which are direct analogues for the classes 
            contained in the System.Drawing namespaces. For example, a 
            System.Drawing.Pen maps to a WebSupergoo.ABCpdf13.Drawing.Pen and a 
            System.Drawing.Bitmap maps to a WebSupergoo.ABCpdf13.Drawing.Bitmap.</P>
            <P>The procedure for porting your System.Drawing code is simple:</P>
            <OL>
              <LI>Change namespaces from those in System.Drawing to the 
              corresponding ones in ABCpdf13.Drawing (Drawing, Drawing.Text, 
              Drawing.Drawing2D etc.) 
              <LI>Change all types from those in System.Drawing to the 
              corresponding types in ABCpdf13.Drawing (Pen, Brush, Color etc.) 
              <LI>Remove any code which does not have an analogues in 
              ABCpdf.Drawing </LI></OL>
            <P>In general, the number of calls which do not have analogues in 
            ABCpdf.Drawing should be small. However, we provide the full source 
            code for System.Drawing so extending the assembly is simple.</P>
            <P>As well as the standard functions analogous to those in 
            System.Drawing, the ABCpdf13.Drawing namespace also contains similar 
            functions aimed at greater control over the PDF production process. 
            For example, the ABCpdf Color class contains a FromCmyk function to 
            allow the construction of CMYK colors as well as RGB ones.</P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../images/steel-pin.gif" width=64><BR>Original </TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>We start with our source System.Drawing code.</P>
            <P><SPAN class=language>[C#]</SPAN><BR><pre><code class="language-csharp">// create a canvas for painting on
Bitmap pg = new Bitmap((int)(8.5 * 72), (int)(11 * 72));
Graphics gr = Graphics.FromImage(pg);

// clear the canvas to white
Rectangle pgRect = new Rectangle(0, 0, pg.Width, pg.Height);
SolidBrush solidWhite = new SolidBrush(Color.White);
gr.FillRectangle(solidWhite, pgRect);
// load a new image and draw it centered on our canvas
Stream stm = Assembly.GetExecutingAssembly().GetManifestResourceStream("Examples.pic1.jpg");
Image img = Image.FromStream(stm);
int w = img.Width * 2;
int h = img.Height * 2;
Rectangle rc = new Rectangle((pg.Width - w) / 2, (pg.Height - h) / 2, w, h);
gr.DrawImage(img, rc);
img.Dispose();
stm.Close();
// frame the image with a black border
gr.DrawRectangle(new Pen(Color.Black, 4), rc);
// add some text at the top left of the canvas
Font fn = new Font("Comic Sans MS", 72);
SolidBrush solidBlack = new SolidBrush(Color.Black);
gr.DrawString("My Picture", fn, solidBlack, (int)(pg.Width * 0.1), (int)(pg.Height * 0.1));

// save the output
pg.Save("../../abcpdf.drawing.gif", System.Drawing.Imaging.ImageFormat.Gif);<!--notcode-->
</code></pre>
            <BR><SPAN class=language>[Visual 
            Basic]</SPAN><BR>
            <pre><code class="language-vbnet">Imports WebSupergoo.ABCpdf13.Drawing;
Imports WebSupergoo.ABCpdf13.Drawing.Drawing2D;
Imports WebSupergoo.ABCpdf13.Drawing.Text;
</code></pre>
            </P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../images/steel-pin.gif" width=64><BR>Names</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>First, we swap out the old System.Drawing namespaces and insert 
            our own ABCpdf.Drawing ones. Note that ABCpdf.Drawing uses 
            structures like rectangles and points which are defined in 
            System.Drawing. So, we create aliases to make it easy to reference 
            them.</P>
            <P><SPAN class=language>[C#]</SPAN><BR><pre><code class="language-csharp">using System;
using System.IO;
using System.Reflection;

using WebSupergoo.ABCpdf13.Drawing;
using WebSupergoo.ABCpdf13.Drawing.Drawing2D;
using WebSupergoo.ABCpdf13.Drawing.Text;
using Rectangle = System.Drawing.Rectangle;
using RectangleF = System.Drawing.RectangleF;
using Point = System.Drawing.Point;
using PointF = System.Drawing.PointF;
</code></pre><BR><SPAN class=language>[Visual 
            Basic]</SPAN><BR>
            <pre><code class="language-vbnet">Imports System;
Imports System.IO;
Imports System.Reflection;

Imports WebSupergoo.ABCpdf13.Drawing;
Imports WebSupergoo.ABCpdf13.Drawing.Drawing2D;
Imports WebSupergoo.ABCpdf13.Drawing.Text;
Imports Rectangle = System.Drawing.Rectangle;
Imports RectangleF = System.Drawing.RectangleF;
Imports Point = System.Drawing.Point;
Imports PointF = System.Drawing.PointF;
</code></pre>
            </P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../images/steel-pin.gif" width=64><BR>Create</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>Because we're drawing on a page of a PDF document rather than on 
            an image, we need to make a few modifications to the first lines of 
            code.</P>
            <P><SPAN class=language>[C#]</SPAN><BR><pre><code class="language-csharp">// create a canvas for painting on
var doc = new PDFDocument();
var pg = doc.AddPage((int)(8.5 * 300), (int)(11 * 300));
var gr = pg.Graphics;
</code></pre><BR><SPAN 
            class=language>[Visual Basic]</SPAN><BR><pre><code class="language-vbnet">' create a canvas for painting on
Dim doc As New PDFDocument()
Dim pg = doc.AddPage(DirectCast(8.5 * 300, Integer), DirectCast(11 * 300, Integer))
Dim gr = pg.Graphics
</code></pre></P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../images/steel-pin.gif" width=64><BR>Draw</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>The drawing code remains completely unchanged.</P>
            <P><SPAN class=language>[C#]</SPAN><BR><pre><code class="language-csharp">// clear the canvas to white
var pgRect = new Rectangle(0, 0, pg.Width, pg.Height);
var solidWhite = new SolidBrush(Color.White);
gr.FillRectangle(solidWhite, pgRect);
// load a new image and draw it centered on our canvas
using var stm = File.OpenRead(Server.MapPath("mypics/pic1.jpg"));
using var img = Image.FromStream(stm);
int w = img.Width;
int h = img.Height;
Rectangle rc = new Rectangle((pg.Width - w) / 2, (pg.Height - h) / 2, w, h);
gr.DrawImage(img, rc);
// frame the image with a black border
gr.DrawRectangle(new Pen(Color.Black, 4), rc);
// add some text at the top left of the canvas
Font fn = new Font("Comic Sans MS", 300);
var solidBlack = new SolidBrush(Color.Black);
gr.DrawString("My Picture", fn, solidBlack, (int)(pg.Width * 0.1), (int)(pg.Height * 0.1));
</code></pre><BR><SPAN class=language>[Visual 
            Basic]</SPAN><BR><pre><code class="language-vbnet">' clear the canvas to white
Dim pgRect As New Rectangle(0, 0, pg.Width, pg.Height)
Dim solidWhite As New SolidBrush(Color.White)
gr.FillRectangle(solidWhite, pgRect)
' load a new image and draw it centered on our canvas
Dim stm As Stream = File.OpenRead(Server.MapPath("mypics/pic1.jpg"))
Dim img As Image = Image.FromStream(stm)
Dim w As Integer = img.Width
Dim h As Integer = img.Height
Dim rc As New Rectangle((pg.Width - w) / 2, (pg.Height - h) / 2, w, h)
gr.DrawImage(img, rc)
img.Dispose()
stm.Close()
' frame the image with a black border
gr.DrawRectangle(New Pen(Color.Black, 4), rc)
' add some text at the top left of the canvas
Dim fn As New Font("Comic Sans MS", 300)
Dim solidBlack As New SolidBrush(Color.Black)
gr.DrawString("My Picture", fn, solidBlack, DirectCast(pg.Width * 0.1, Integer), DirectCast(pg.Height * 0.1, Integer))
</code></pre></P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../images/steel-pin.gif" width=64><BR>Save</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>Because we're saving to a PDF document, we need to make a few 
            modifications to the last lines of code.</P>
            <P><SPAN class=language>[C#]</SPAN><BR><pre><code class="language-csharp">// save the output
doc.Save(Server.MapPath("abcpdf.drawing.pdf"));
</code></pre><BR><SPAN class=language>[Visual 
            Basic]</SPAN><BR><pre><code class="language-vbnet">' save the output
doc.Save(Server.MapPath("abcpdf.drawing.pdf"))
</code></pre></P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../images/steel-pin.gif" width=64><BR>Results</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P><IMG src="../images/pdf/abcpdf.drawing.pdf.png" class="example"><BR>abcpdf.drawing.pdf</P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
<P>&nbsp;</P></BODY></HTML>
