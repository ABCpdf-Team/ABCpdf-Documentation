<html>
<head>
<title>XTextStyle Kerning Property. The kerning method. ABCpdf .NET PDF Library.</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="../../../mystyles.css">
<link rel="stylesheet" href="../../../prism.css">
<script src="../../../prism.js"></script></head>

<body bgcolor="#FFFFFF">
<table border="0" cellpadding="0" cellspacing="4">
  <tr> 
    <td valign="top"><img src="../../../images/goo.gif" width="58" height="60"></td>
    <td width="14">&nbsp;</td>
    <td> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="pageheader"> Kerning Property</td>
          <td width="60">&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
        <tr> 
          <td background="../../../images/steel-line-3.gif" height="11"></td>
          <td background="../../../images/steel-line-3.gif" height="11" width="60"></td>
          <td height="11"><img src="../../../images/steel-blob-11.gif" width="11" height="11"></td>
        </tr>
        <tr> 
          <td> 
            <p>&nbsp;</p>
            <table class="wsgtable" cellpadding="3" cellspacing="0" border="5" bordercolor="#FFFFFF"> 
              <tr> 
                <td align="center"><b>Type</b></td>
                <td><b>Default Value</b></td>
                <td><b>Read Only</b></td>
                <td><b>Description</b></td>
              </tr>
              <tr valign="top"> 
                <td align="left"><span class="language">[C#]</span><br>
                  <code>KerningType</code><br>
                  <br>
                  <span class="language">[Visual&nbsp;Basic]</span><br>
                  <code>KerningType</code></td>
                <td>Default</td>
                <td>No</td>
                <td>The kerning method.</td>
              </tr>
            </table>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr> 
    <td valign="top" class="sectheader"><img src="../../../images/steel-pin.gif" width="64" height="10"><br>Notes</td>
    <td width="14">&nbsp;</td>
    <td valign="top"> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td> 
            <p>The kerning method.</p>
            <p>Kerning is similar to <a href="charspacing.htm">character spacing</a> in that it controls how far apart two characters are. However rather than being a constant, it is a value which is determined by the two characters themselves. So the kerning for &quot;tt&quot; would likely be different than for &quot;te&quot;.</p>
            <p>The KerningType enumeration may take the following  values:</p>
            <UL>
              <LI>None
              <LI>Default
            </UL>
            <P>The default kerning method is  based around the kerning tables in the TrueType font file. Not all fonts contain kerning tables so not all fonts will kern.</P>
            <p>&nbsp;</p>
            </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr> 
    <td valign="top" class="sectheader"><img src="../../../images/steel-pin.gif" width="64" height="10"><br>Example</td>
    <td width="14">&nbsp;</td>
    <td valign="top"> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td> 
            <p>The following shows how to insert a table of contents while disabling kerning.</p>
            <p><span class=language>[C#]</span><br>
              <pre><code class="language-csharp">string text = File.ReadAllText(Server.MapPath("tableofcontents.txt"));
text = text.Replace("\r", "&lt;br&gt;"); // make our carriage returns into breaks
text = text.Replace(" ", "&nbsp;&nbsp;&nbsp;&nbsp; "); // make our indent at start of line into nbsp
using var doc = new Doc();
doc.TextStyle.Size = 36;
doc.TextStyle.Kerning = XTextStyle.KerningType.None;
doc.Rect.Inset(10, 10);
doc.Page = doc.AddPage();
doc.AddTextStyled(text.Replace(" ~", "&lt;leader&gt;.&lt;/leader&gt;"));
doc.Save(Server.MapPath("TableOfContentsWithLeaders.pdf"));
</code></pre><br>
              <span class=language>[Visual Basic]</span><br>
              <pre><code class="language-vbnet">Dim text As String = File.ReadAllText(Server.MapPath("tableofcontents.txt"))
text = text.Replace(vbCr, "&lt;br&gt;")
' make our carriage returns into breaks
text = text.Replace(" ", vbTab &amp; vbTab &amp; " ")
' make our indent at start of line into nbsp
Using doc As New Doc()
&nbsp;&nbsp;doc.TextStyle.Size = 36
&nbsp;&nbsp;doc.TextStyle.Kerning = XTextStyle.KerningType.None
&nbsp;&nbsp;doc.Rect.Inset(10, 10)
&nbsp;&nbsp;doc.Page = doc.AddPage()
&nbsp;&nbsp;doc.AddTextStyled(text.Replace(" ~", "&lt;leader&gt;.&lt;/leader&gt;"))
&nbsp;&nbsp;doc.Save(Server.MapPath("TableOfContentsWithLeaders.pdf"))
End Using
</code></pre>
        </p>
              <p>Using the following input text.</p>
              <p><code width="100%" height="100%">Chapter 1: Getting Started ~1<br>
                Introduction ~2<br>
                Next Steps ~3<br>
                Chapter 2: What To Do ~4<br>
                Some Difficult Bits ~15<br>
                Some More Difficult Bits ~20<br>
                Chapter 3: In Conclusion ~21<br>
                Summary ~22<br>
                Endword ~23</code></p>
            <p>We get the following output.</p>
              <p><img src="../../../images/pdf/TableOfContentsWithLeaders.pdf.png" class="example"><BR>
TableOfContentsWithLeaders.pdf</p>
          <p>Also see example code in: <a href="../../../6-abcpdf.objects/fontobject/2-properties/widths.htm">FontObject Widths Property</a>.</p>
            <p>&nbsp;</p></td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
