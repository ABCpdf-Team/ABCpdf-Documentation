<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Doc GetData Function. Saves a document to memory. ABCpdf .NET PDF Library.</TITLE>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="../../../mystyles.css">
<link rel="stylesheet" href="../../../prism.css">
<script src="../../../prism.js"></script>
<META content="MSHTML 6.00.6000.16809" name=GENERATOR></HEAD>
<BODY bgColor=#ffffff>
<TABLE cellSpacing=4 cellPadding=0 border=0>
  <TBODY>
  <TR>
    <TD vAlign=top><IMG height=60 src="../../../images/goo.gif" width=58></TD>
    <TD width=14>&nbsp;</TD>
    <TD>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD class=pageheader>GetData Function</TD>
          <TD width=60>&nbsp;</TD>
          <TD>&nbsp;</TD></TR>
        <TR>
          <TD background=../../../images/steel-line-3.gif height=11></TD>
          <TD width=60 background=../../../images/steel-line-3.gif 
          height=11></TD>
          <TD height=11><IMG height=11 src="../../../images/steel-blob-11.gif" 
            width=11></TD></TR>
        <TR>
          <TD>
            <P>Saves a document to memory.</P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../images/steel-pin.gif" width=64><BR>Syntax</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD vAlign=top>
            <P><SPAN class=language>[C#]</SPAN><BR><CODE>byte[] 
            GetData()</CODE><BR><BR><SPAN class=language>[Visual 
            Basic]</SPAN><BR><CODE>Function GetData() As 
            Byte()</CODE><BR></P>
            <P><CODE><IMG height=10 alt="Throws Exceptions" 
            src="../../../images/steel-blob-10.gif" width=10 border=0> may throw 
            Exception()</CODE></P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../images/steel-pin.gif" width=64><BR>Params</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD vAlign=top>
            <TABLE class=wsgtable borderColor=#ffffff cellSpacing=0 
            cellPadding=3 border=5>
              <TBODY>
              <TR>
                <TD align=middle><B>Name</B></TD>
                <TD><B>Description</B></TD></TR>
              <TR vAlign=top>
                <TD align=middle>return</TD>
                <TD>
                  <P>The PDF document as an array of 
            bytes.</P></TD></TR></TBODY></TABLE>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../images/steel-pin.gif" width=64><BR>Notes</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>Normally, you will want to save your documents using the <A 
            href="save.htm">Save</A> method. However, sometimes you will need to 
            obtain your PDF as raw data rather than in a file. The GetData 
            method allows you to do this.</P>
            <P>You may wish to write a PDF directly to a client browser rather 
            than going through an intermediate file. The data you obtain using 
            GetData can be written direct to an HTTP stream using 
            Response.BinaryWrite. Similarly, you may wish to obtain raw data for 
            insertion into a database.</P>
            <P>The <A 
            href="../../xsaveoptions/2-properties/refactor.htm">SaveOptions.Refactor</A> setting determines whether duplicate and  redundant objects are 
            eliminated when the document's data is obtained. </P>
            <TABLE class=backgrounder cellPadding=10 border=0>
              <TBODY>
              <TR>
                <TD>
                  <P><B>PDFs and Internet Explorer. </B>The combination of 
                  Internet Explorer and Acrobat is not always trouble free - 
                  particularly under https or using older versions of Explorer. 
                  It can be difficult to know exactly where the problem lies 
                  because there is an interaction of the Operating System, 
                  Explorer and Acrobat. Any of these can be the cause.</P>
                  <P>Sometimes, Explorer may get 'stuck' on a particular content 
                  type and insist on displaying your PDF as HTML. In this case, 
                  you will see random text starting with %PDF. Sometimes, this 
                  can happen if you stream PDF data to a window which was 
                  previously displaying HTML.</P>
                  <P>Sometimes, server-side debugging results in extra data being 
                  inserted into the content stream. While this may not matter 
                  for HTML, it will corrupt binary documents like PDF.</P>
                  <P>Sometimes, your code may inadvertently insert extra data 
                  into the content stream. Again, this will corrupt the PDF. 
                  Error messages are a common cause of this kind of 
                  corruption.</P>
                  <P>HTTP compression may result in PDF streams being compressed 
                  before return to the browser. While browsers are able to deal 
                  with this type of compression, Acrobat may not be able to. You 
                  can see if this type of compression is being used by examining 
                  the headers returned to the browser using a tool like IEWatch. 
                  If you are using IIS 6 compression, you can disable it on a 
                  page by page basis using the IIS Metabase Explorer from the 
                  IIS 6 resource kit.</P>
                  <P>Sometimes, the use of HTTPS with PDF content can be 
                  problematic. For example, see <A target="_blank" href="http://support.microsoft.com/kb/812935">Microsoft 
                  KB812935</A>.</P>
                  <P>For testing purposes, you may wish to change the 
                  content-disposition from 'inline' to 'attachment'. This will 
                  allow you to download the data rather than view it in your 
                  browser. You can then check the downloaded document using 
                  Acrobat or a hex editor.</P>
                  <P>Alternatively, if the problem is that PDFs seem to be cached 
                  you may wish to check the 'Enable Content Expiration' checkbox 
                  you will find under the Web Site Properties.</P>
                  <P>We would suggest two steps:</P>
                  <OL>
                    <LI>Your first step should be to eliminate ABCpdf as the 
                    cause. Why not save the PDF to disk at the same time as 
                    sending it to the client? That way you can establish that 
                    the PDF is fine. If you want to take it further, you can then 
                    read the PDF data from disk and stream it direct to the 
                    client. 
                    <LI>The example site streams PDF data direct to the client. 
                    So, install the example site into a new virtual directory and 
                    establish if the same issue exists for the example site. If 
                    it works, then it's simply a matter of moving your current 
                    code base and the example site code base towards each other 
                    until you find the cause of the 
              problem.<BR></LI></OL></TD></TR></TBODY></TABLE>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../images/steel-pin.gif" width=64><BR>Example</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>The following code illustrates how one might add text to a PDF 
            and then write it direct to the client browser. This code is an 
            entire ASP.NET page - hello.aspx.</P>
            <P><SPAN class=language>[C#]</SPAN><BR><pre><code class="language-csharp">&lt;% @Page Language="C#" %&gt;
&lt;% @Import Namespace=" WebSupergoo.ABCpdf13" %&gt;
&lt;%
Doc theDoc = new Doc();
theDoc.FontSize = 96;
theDoc.AddText("Hello World");
byte[] theData = theDoc.GetData();
Response.Clear();
Response.ContentType = "application/pdf";
Response.AddHeader("content-disposition", "inline; filename=MyPDF.PDF");
Response.AddHeader("content-length", theData.Length.ToString());
Response.BinaryWrite(theData);
Response.End();
%&gt;
</code></pre><BR><SPAN class=language>[Visual 
            Basic]</SPAN><BR><pre><code class="language-vbnet">&lt;% @Page Language="Visual Basic" %&gt;
&lt;% @Import Namespace=" WebSupergoo.ABCpdf13" %&gt;
&lt;%
Dim theDoc As Doc = New Doc()
theDoc.FontSize = 96
theDoc.AddText("Hello World")
Dim theData() As Byte = theDoc.GetData()
Response.Clear()
Response.ContentType = "application/pdf"
Response.AddHeader("content-disposition", "inline; filename=MyPDF.PDF")
Response.AddHeader("content-length", theData.Length.ToString())
Response.BinaryWrite(theData)
Response.End()
%&gt;
</code></pre></P>
            <P><IMG src="../../../images/pdf/docsave.pdf.png" 
            class="example"><BR>hello.asp<BR></P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
<P>&nbsp;</P></BODY></HTML>
