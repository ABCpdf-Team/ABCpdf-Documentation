<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Doc AddImageToChain Function. Adds a new page from a paged HTML or PostScript render. ABCpdf .NET PDF Library.</TITLE>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="../../../mystyles.css">
<link rel="stylesheet" href="../../../prism.css">
<script src="../../../prism.js"></script>
<META content="MSHTML 6.00.6000.16705" name=GENERATOR></HEAD>
<BODY bgColor=#ffffff>
<TABLE cellSpacing=4 cellPadding=0 border=0>
  <TBODY>
  <TR>
    <TD vAlign=top><IMG height=60 src="../../../images/goo.gif" width=58></TD>
    <TD width=14>&nbsp;</TD>
    <TD>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD class=pageheader>AddImageToChain Function</TD>
          <TD width=60>&nbsp;</TD>
          <TD>&nbsp;</TD></TR>
        <TR>
          <TD background=../../../images/steel-line-3.gif height=11></TD>
          <TD width=60 background=../../../images/steel-line-3.gif 
          height=11></TD>
          <TD height=11><IMG height=11 src="../../../images/steel-blob-11.gif" 
            width=11></TD></TR>
        <TR>
          <TD>
            <P>Adds a new page from a paged HTML or PostScript render.</P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../images/steel-pin.gif" width=64><BR>Syntax</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD vAlign=top>
            <P><SPAN class=language>[C#]</SPAN><BR><CODE>int 
            AddImageToChain(int id)<BR></CODE><BR><SPAN class=language>[Visual 
            Basic]</SPAN><BR><CODE>Function AddImageToChain(id As 
            Integer) As Integer<BR></CODE></P>
            <P><CODE><IMG height=10 alt="Throws Exceptions" 
            src="../../../images/steel-blob-10.gif" width=10 border=0> may throw 
            Exception()</CODE></P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../images/steel-pin.gif" width=64><BR>Params</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD vAlign=top>
            <TABLE class=wsgtable borderColor=#ffffff cellSpacing=0 
            cellPadding=3 border=5>
              <TBODY>
              <TR>
                <TD align=middle><B>Name</B></TD>
                <TD><B>Description</B></TD></TR>
              <TR vAlign=top>
                <TD align=middle>id</TD>
                <TD>
                  <P>The ID of the previous object in the chain.</P></TD></TR>
              <TR vAlign=top>
                <TD align=middle>return</TD>
                <TD>The ID of the newly added object.</TD></TR></TBODY></TABLE>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../images/steel-pin.gif" width=64><BR>Notes</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>Some web pages are too large to fit on one PDF page. </P>
            <P>To split a web page across multiple PDF pages you need to call <A 
            href="addimageurl.htm">AddImageUrl</A> or <A 
            href="addimageurl.htm">AddImageHtml</A> to render the first page. 
            The ID returned from these calls represents the head of the chain. 
            </P>
            <P>To add subsequent pages to the chain you need to make calls to 
            AddImageToChain passing in the previous image from the chain each 
            time.</P>
            <P>As well as using chaining to split web pages across multiple PDF 
            pages you can also use it to split your web pages across multiple 
            columns within a page. You can even split your chain to generate 
            multiple copies of the same page.</P>
            <P>More information can be found in the <A 
            href="../../../3-concepts/g-htmlrender.htm">HTML / CSS Rendering</A> 
            section of the documentation.</P>
            <P>Similarly some PostScript (PS) files contain more than one page 
            of content.</P>
            <P>To split a PS file across multiple PDF pages you need to call <A 
            href="addimagefile.htm">AddImageFile</A> or <A 
            href="addimagedata.htm">AddImageData</A> to render the first page. 
            The ID returned from these calls represents the head of the chain. 
            </P>
            <P>To add subsequent pages to the chain you need to make calls to 
            AddImageToChain passing in the previous image from the chain each 
            time.</P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../images/steel-pin.gif" width=64><BR>Example</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>This example shows how to import an HTML page into a multi-page 
            PDF document.</P>
            <P>We first create a <A href="../default.htm">Doc</A> object and 
            inset the edges a little so that the HTML will appear in the middle 
            of the page.</P>
            <P><SPAN class=language>[C#]</SPAN><BR><pre><code class="language-csharp">using var doc = new Doc();
doc.Rect.Inset(72, 144);
</code></pre><BR><SPAN 
            class=language>[Visual Basic]</SPAN><BR><pre><code class="language-vbnet">Using doc As New Doc()
&nbsp;&nbsp;doc.Rect.Inset(72, 144)
</code></pre></P>
            <P>We add the first page of HTML. We save the returned ID as this 
            will be used to add subsequent pages.</P>
            <P><SPAN class=language>[C#]</SPAN><BR><pre><code class="language-csharp">int id = doc.AddImageUrl("http://www.yahoo.com/");
</code></pre><BR><SPAN 
            class=language>[Visual Basic]</SPAN><BR><pre><code class="language-vbnet">&nbsp;&nbsp;Dim theID As Integer
&nbsp;&nbsp;theID = doc.AddImageUrl("http://www.yahoo.com/")
</code></pre></P>
            <P>We now chain subsequent pages together. We stop when we reach a 
            page which wasn't truncated.</P>
            <P><SPAN class=language>[C#]</SPAN><BR><pre><code class="language-csharp">while (true) {
&nbsp;&nbsp;doc.FrameRect();
&nbsp;&nbsp;if (!doc.Chainable(id))
&nbsp;&nbsp;&nbsp;&nbsp;break;
&nbsp;&nbsp;doc.Page = doc.AddPage();
&nbsp;&nbsp;id = doc.AddImageToChain(id);
}
</code></pre><BR><SPAN 
            class=language>[Visual Basic]</SPAN><BR><pre><code class="language-vbnet">&nbsp;&nbsp;While True
&nbsp;&nbsp;&nbsp;&nbsp;doc.FrameRect()
&nbsp;&nbsp;&nbsp;&nbsp;If Not doc.Chainable(theID) Then
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit While
&nbsp;&nbsp;&nbsp;&nbsp;End If
&nbsp;&nbsp;&nbsp;&nbsp;doc.Page = doc.AddPage()
&nbsp;&nbsp;&nbsp;&nbsp;theID = doc.AddImageToChain(theID)
&nbsp;&nbsp;End While
</code></pre></P>
            <P>After adding the pages we can flatten them. We can't do this 
            until after the pages have been added because flattening will 
            invalidate our previous ID and break the chain.</P>
            <P><SPAN class=language>[C#]</SPAN><BR><pre><code class="language-csharp">for (int i = 1; i &lt;= doc.PageCount; i++) {
&nbsp;&nbsp;doc.PageNumber = i;
&nbsp;&nbsp;doc.Flatten();
}
</code></pre><BR><SPAN 
            class=language>[Visual Basic]</SPAN><BR><pre><code class="language-vbnet">&nbsp;&nbsp;Dim i As Integer = 1
&nbsp;&nbsp;While i &lt;= doc.PageCount
&nbsp;&nbsp;&nbsp;&nbsp;doc.PageNumber = i
&nbsp;&nbsp;&nbsp;&nbsp;doc.Flatten()
&nbsp;&nbsp;&nbsp;&nbsp;System.Math.Max(System.Threading.Interlocked.Increment(i),i - 1)
&nbsp;&nbsp;End While
</code></pre></P>
            <P>Finally we save. </P>
            <P><SPAN 
            class=language>[C#]</SPAN>
            <pre><code class="language-csharp">doc.Save(Server.MapPath("paged_html.pdf"));
</code></pre><BR><SPAN class=language>[Visual 
            Basic]</SPAN><BR>
            <pre><code class="language-vbnet">&nbsp;&nbsp;doc.Save(Server.MapPath("paged_html.pdf"))
End Using
</code></pre></P>
            <P>We get the following output.</P>
            <TABLE cellSpacing=3 cellPadding=3 width="100%" border=0>
              <TBODY>
              <TR>
                <TD><IMG height=272 
                  src="../../../images/pdf/paged_html.pdf.png" 
                  class="example"><BR>
                paged_html.pdf [Page 1]</TD>
                <TD><IMG height=272 
                  src="../../../images/pdf/paged_html.pdf2.png" 
                  class="example"><BR>
                paged_html.pdf [Page 2]</TD>
              </TR></TBODY></TABLE>
            <P>&nbsp;</P>
            <P></P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
<P>&nbsp;</P></BODY></HTML>
