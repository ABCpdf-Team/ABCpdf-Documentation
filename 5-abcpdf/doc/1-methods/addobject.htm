<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Doc AddObject Function. Adds a native PDF object to the document. ABCpdf .NET PDF Library.</TITLE>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="../../../mystyles.css">
<link rel="stylesheet" href="../../../prism.css">
<script src="../../../prism.js"></script>
<META content="MSHTML 6.00.6000.16640" name=GENERATOR></HEAD>
<BODY bgColor=#ffffff>
<TABLE cellSpacing=4 cellPadding=0 border=0>
  <TBODY>
  <TR>
    <TD vAlign=top><IMG height=60 src="../../../images/goo.gif" width=58></TD>
    <TD width=14>&nbsp;</TD>
    <TD>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD class=pageheader>AddObject Function</TD>
          <TD width=60>&nbsp;</TD>
          <TD>&nbsp;</TD></TR>
        <TR>
          <TD background=../../../images/steel-line-3.gif height=11></TD>
          <TD width=60 background=../../../images/steel-line-3.gif 
          height=11></TD>
          <TD height=11><IMG height=11 src="../../../images/steel-blob-11.gif" 
            width=11></TD></TR>
        <TR>
          <TD>
            <P>Adds a native PDF object to the document.</P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../images/steel-pin.gif" width=64><BR>Syntax</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD vAlign=top>
            <P><SPAN class=language>[C#]</SPAN><BR><CODE>int 
            AddObject(string text)<BR></CODE><BR><SPAN class=language>[Visual 
            Basic]</SPAN><BR><CODE>Function AddObject(text As 
            String) As Integer<BR></CODE></P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../images/steel-pin.gif" width=64><BR>Params</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD vAlign=top>
            <TABLE class=wsgtable borderColor=#ffffff cellSpacing=0 
            cellPadding=3 border=5>
              <TBODY>
              <TR>
                <TD align=middle><B>Name</B></TD>
                <TD><B>Description</B></TD></TR>
              <TR vAlign=top>
                <TD align=middle>text</TD>
                <TD>The raw native object to be added.</TD></TR>
              <TR vAlign=top>
                <TD align=middle>return</TD>
                <TD>The Object ID of the newly added 
            Object.</TD></TR></TBODY></TABLE>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../images/steel-pin.gif" width=64><BR>Notes</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>You will not normally need to use this feature. However it can be 
            useful if you wish to add objects which are defined in the PDF 
            specification but not supported by ABCpdf .NET. </P>
            <P>Be aware that the text you pass this function must be in native 
            PDF format. This means that unusual characters in text strings must 
            be appropriately escaped. For full details of the way that PDF 
            objects are represented you should see the Adobe PDF 
            Specification.</P>
            <P>Your newly added object needs to be referenced from somewhere in 
            the PDF document. If you do not reference your object it will be 
            orphaned and will be deleted when the document is saved.</P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../images/steel-pin.gif" width=64><BR>Example</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>The following code adds a document information section to an 
            existing PDF document. First it adds an empty dictionary and 
            references it from the document trailer. Then it adds an Author, 
            Title and Subject before saving.</P>
            <P>There are multiple places that metadata can be put into a PDF. 
            The most commonly used are the Info entry of the Trailer and the 
            Metadata entry of the Catalog. The Info entry is the older and most 
            widely recognized location. The Metadata entry is a more recent XML 
            based store. It is important that information within these stores is 
              consistent. If the information is inconsistent then you'll find that 
              the metadata reported by different applications is different. </P>
            <P>To try and reduce the amount of confusion caused by multiple metadata entries, PDF 2.0 deprecated all Info entries apart from the CreationDate and ModDate. To be PDF 2.0 compliant you should put all metadata into the Metadata entry rather than the Info one. The code example below will ensure backwards compatibility with legacy applications, but in general for metadata, you should be using the kind of code you see in the <a href="../../../6-abcpdf.objects/catalog/2-properties/metadata.htm">Catalog.Metadata</a> example.</P>
            <P>In this example, to 
              ensure that the data is consistent we're going to delete any XML 
              Metadata entry that may be present. That way we force applications 
              to report the Info store. However it wouldn't be a difficult matter 
              to load up any XML in the Metadata entry and modify that as well as 
              the Info entry. For details see the  <a href="../../../6-abcpdf.objects/catalog/2-properties/metadata.htm">Catalog.Metadata</a> example.</P>
            <P><SPAN class=language>[C#]</SPAN><BR><pre><code class="language-csharp">using var doc = new Doc();
doc.Read(Server.MapPath("../mypics/sample.pdf"));
if (doc.GetInfo(-1, "/Info") == "")
&nbsp;&nbsp;doc.SetInfo(-1, "/Info:Ref", doc.AddObject("&lt;&lt; &gt;&gt;").ToString());
doc.SetInfo(-1, "/Info*/Author:Text", "Arthur Dent");
doc.SetInfo(-1, "/Info*/Title:Text", "Musings on Life");
doc.SetInfo(-1, "/Info*/Subject:Text", "Philosophy");
doc.SetInfo(doc.Root, "/Metadata:Del", "");
doc.Save(Server.MapPath("docaddobject.pdf"));
</code></pre><BR><SPAN 
            class=language>[Visual Basic]</SPAN><BR><pre><code class="language-vbnet">Using doc As New Doc()
&nbsp;&nbsp;doc.Read(Server.MapPath("../mypics/sample.pdf"))
&nbsp;&nbsp;If doc.GetInfo(-1, "/Info") = "" Then
&nbsp;&nbsp;&nbsp;&nbsp;doc.SetInfo(-1, "/Info:Ref", doc.AddObject("&lt;&lt; &gt;&gt;").ToString())
&nbsp;&nbsp;End If
&nbsp;&nbsp;doc.SetInfo(-1, "/Info*/Author:Text", "Arthur Dent")
&nbsp;&nbsp;doc.SetInfo(-1, "/Info*/Title:Text", "Musings on Life")
&nbsp;&nbsp;doc.SetInfo(-1, "/Info*/Subject:Text", "Philosophy")
&nbsp;&nbsp;doc.SetInfo(doc.Root, "/Metadata:Del", "")
&nbsp;&nbsp;doc.Save(Server.MapPath("docaddobject.pdf"))
End Using
</code></pre></P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
<P>&nbsp;</P></BODY></HTML>
