<html>
<head>
<title>Page Rotation Property. The number of degrees to rotate the page before display. ABCpdf .NET PDF Library.</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="../../../mystyles.css">
<link rel="stylesheet" href="../../../prism.css">
<script src="../../../prism.js"></script></head>

<body bgcolor="#FFFFFF">
<table border="0" cellpadding="0" cellspacing="4">
  <tr> 
    <td valign="top"><img src="../../../images/goo.gif" width="58" height="60"></td>
    <td width="14">&nbsp;</td>
    <td> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="pageheader">Rotation Property</td>
          <td width="60">&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
        <tr> 
          <td background="../../../images/steel-line-3.gif" height="11"></td>
          <td background="../../../images/steel-line-3.gif" height="11" width="60"></td>
          <td height="11"><img src="../../../images/steel-blob-11.gif" width="11" height="11"></td>
        </tr>
        <tr> 
          <td> 
            <p>&nbsp;</p>
            <table class="wsgtable" cellpadding="3" cellspacing="0" border="5" bordercolor="#FFFFFF">
              <tr> 
                <td align="center"><b>Type</b></td>
                <td><b>Default</b></td>
                <td><b>Read Only</b></td>
                <td><b>Description</b></td>
              </tr>
              <tr valign="top"> 
                <td align="left"><span class="language">[C#]</span><br>
                  <code>int</code><br>
                  <br>
                  <span class="language">[Visual&nbsp;Basic]</span><br>
                  <code>Integer</code></td>
                <td>&nbsp;n/a&nbsp;</td>
                <td>No</td>
                <td>The number of degrees to rotate the page before display.</td>
              </tr>
            </table>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr> 
    <td valign="top" class="sectheader"><img src="../../../images/steel-pin.gif" width="64" height="10"><br>Notes</td>
    <td width="14">&nbsp;</td>
    <td valign="top"> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td> 
            <p>The number of degrees clockwise to rotate the page before display. 
            </p>
            <p>The values 0 and 180 indicate portrait orientation. The values 
              90 and 270 indicate landscape orientation.</p>
            <p>This value should be a multiple of 90.</p>
            <p>&nbsp;</p>
            </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr> 
    <td valign="top" class="sectheader"><img src="../../../images/steel-pin.gif" width="64" height="10"><br>Example</td>
    <td width="14">&nbsp;</td>
    <td valign="top"> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td> 
            <p>This example shows how to use the Rotation property to determine how to add a PDF page - which may be rotated - to a portrait PDF page.</p>
            <p><span class=language>[C#]</span><br>
              <pre><code class="language-csharp">using var doc = new Doc();
using var src = new Doc();
src.Read(Server.MapPath("landscape.pdf"));
int rotation = ((Page)src.ObjectSoup[src.Page]).Rotation;
bool landscape = src.MediaBox.Width &gt; src.MediaBox.Height;
doc.Page = doc.AddPage();   // output is always in portrait
if (landscape) {
&nbsp;&nbsp;switch (rotation) {

&nbsp;&nbsp;&nbsp;&nbsp;case 0:
&nbsp;&nbsp;&nbsp;&nbsp;case 90:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.Transform.Rotate(270, 0, 0);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.Transform.Translate(0, doc.MediaBox.Height);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
&nbsp;&nbsp;&nbsp;&nbsp;case 180:
&nbsp;&nbsp;&nbsp;&nbsp;case 270:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.Transform.Rotate(90, 0, 0);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.Transform.Translate(doc.MediaBox.Width, 0);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
&nbsp;&nbsp;}
&nbsp;&nbsp;doc.Rect.SetRect(0, 0, doc.MediaBox.Height, doc.MediaBox.Width);
}
else {
&nbsp;&nbsp;switch (rotation) {
&nbsp;&nbsp;&nbsp;&nbsp;case 90:
&nbsp;&nbsp;&nbsp;&nbsp;case 180:
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.Transform.Rotate(180, 0, 0);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.Transform.Translate(doc.MediaBox.Width, doc.MediaBox.Height);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
&nbsp;&nbsp;}
}
doc.AddImageDoc(src, 1, null);
doc.Save(Server.MapPath("addtoportrait.pdf"));
</code></pre>
  <br>
              <span class=language>[Visual Basic]</span><br>
              <pre><code class="language-vbnet">Using doc As New Doc(), src As New Doc()
&nbsp;&nbsp;src.Read(Server.MapPath("landscape.pdf"))
&nbsp;&nbsp;Dim rotation As Integer = DirectCast(src.ObjectSoup(src.Page), Page).Rotation
&nbsp;&nbsp;Dim landscape As Boolean = src.MediaBox.Width &gt; src.MediaBox.Height
&nbsp;&nbsp;doc.Page = doc.AddPage()
&nbsp;&nbsp;' output is always in portrait
&nbsp;&nbsp;If landscape Then
&nbsp;&nbsp;&nbsp;&nbsp;Select Case rotation

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 0, 90
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.Transform.Rotate(270, 0, 0)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.Transform.Translate(0, doc.MediaBox.Height)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit Select
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 180, 270
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.Transform.Rotate(90, 0, 0)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.Transform.Translate(doc.MediaBox.Width, 0)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit Select
&nbsp;&nbsp;&nbsp;&nbsp;End Select
&nbsp;&nbsp;&nbsp;&nbsp;doc.Rect.SetRect(0, 0, doc.MediaBox.Height, doc.MediaBox.Width)
&nbsp;&nbsp;Else
&nbsp;&nbsp;&nbsp;&nbsp;Select Case rotation
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Case 90, 180
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.Transform.Rotate(180, 0, 0)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;doc.Transform.Translate(doc.MediaBox.Width, doc.MediaBox.Height)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Exit Select
&nbsp;&nbsp;&nbsp;&nbsp;End Select
&nbsp;&nbsp;End If
&nbsp;&nbsp;doc.AddImageDoc(src, 1, Nothing)
&nbsp;&nbsp;doc.Save(Server.MapPath("addtoportrait.pdf"))
End Using
</code></pre>
            </p>
            <p><img src="../../../images/pdf/landscape.pdf.png" class="example"><BR>
              landscape.pdf</p>
            <p><img src="../../../images/pdf/addtoportrait.pdf.png" class="example"><BR>
addtoportrait.pdf</p>
            <p>&nbsp;</p>
            </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
