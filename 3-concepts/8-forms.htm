<html>
<head>
<title>Fields and Forms</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="../mystyles.css">
<link rel="stylesheet" href="../prism.css">
<script src="../prism.js"></script></head>

<body bgcolor="#FFFFFF">
<table border="0" cellpadding="0" cellspacing="4">
  <tr>
    <td valign="top"><img src="../images/goo.gif" width="58" height="60"></td>
    <td width="14">&nbsp;</td>
    <td>
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr>
          <td class="pageheader"> Fields and Forms</td>
          <td width="60">&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
        <tr>
          <td background="../images/steel-line-3.gif" height="11"></td>
          <td background="../images/steel-line-3.gif" height="11" width="60"></td>
          <td height="11"><img src="../images/steel-blob-11.gif" width="11" height="11"></td>
        </tr>
        <tr>
          <td>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr>
    <td valign="top" class="sectheader"><img src="../images/steel-pin.gif" width="64" height="10"><br>
      Basics</td>
    <td width="14">&nbsp;</td>
    <td valign="top">
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr>
          <td>
            <p>PDF allows the creation of interactive forms. Sometimes you will
              hear these types of PDF referred to as electronic forms, eForms
              or AcroForms.</p>
            <p>To a client an eForm simply looks like a normal PDF containing
              text boxes, buttons and other interactive elements of the type you
              typically see on the web. </p>
            <p>Indeed eForms support elements almost identical to HTML forms.
              They also support mechanisms very similar or identical to HTML forms
              for content submission to a web server.</p>
            <p>For more details see the <a target="_blank" href="http://partners.adobe.com/">Adobe
              Web Site</a>.</p>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr>
    <td valign="top" class="sectheader"><img src="../images/steel-pin.gif" width="64" height="10"><br>
      Fields</td>
    <td width="14">&nbsp;</td>
    <td valign="top">
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr>
          <td>
            <p>Most people coming to eForms will be coming from an HTML background. There
              are subtle differences between the PDF form model and the HTML form
              model that can cause confusion.</p>
            <p>In HTML a form is part of a web page. Each field in the HTML form
              has a visible appearance on the page (with the exception of hidden
              fields). So the concept of a field and what it looks like on the
              page is pretty much identical.</p>
            <p>eForms separate the idea of a field from its visible representation.
            </p>
            <p>Each page of the document owns a set of visible annotations. There
              are lots of different types of annotation but the ones that are
              used in eForm fields are called widgets. A widget contains properties
              that allow a PDF reader to display it appropriately on the page.
            </p>
            <p>Each document owns a tree structure of fields which spans the entire
              document. Each field has a name and also a full name (like a file
              path) which tells you how to get to that field from the top level
              of the tree. The leaves of the tree contain the visible widgets
              that you see on the pages. Note that PDF does not require that full
              names are unique.</p>
            <p>So there are two independent sets of entities each with its own
              features. The bits you see and which people normally call fields
              are in fact widgets. </p>
            <p>Widgets do not have a name or identity as such - it's just that
              they may be associated with a field which has an identity. Similarly
              a field doesn't exist at a location or on a page it is just that
              it is associated with a widget that exists at a particular location
              on a particular page.</p>
            <p>ABCpdf hides these distinctions from you. When you ask for a field
              by name it will return you the widget associated with that field.
              Given the widget you can find out where it is physically located
              in terms of page numbers and page rectangles. Similarly if you have
              a widget you can ask it for a field name. Behind the scenes ABCpdf
              finds the field associated with the widget and returns you the field
              name.</p>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr>
    <td valign="top" class="sectheader"><img src="../images/steel-pin.gif" width="64" height="10"><br>
      Why?</td>
    <td width="14">&nbsp;</td>
    <td valign="top">
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr>
          <td>
            <p>So why are eForms useful? There are a range of purposes to which
              eForms can be put. However probably the most common purpose is to
              provide placeholders in template PDFs.</p>
            <p>Suppose you have a template document you want to use within ABCpdf.
              Using Acrobat you can insert form fields into the PDF at locations
              you want content to be inserted. Using ABCpdf you can automatically
              detect the locations of those fields and enter content at those
              locations.</p>
            <p>If later you want to shift your content a little it's a simple
              matter to open the PDF in Acrobat and move the fields around.</p>
            <p>See the <a href="../4-examples/15-eform1.htm">eForm Example</a>
              for details.</p>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr>
    <td valign="top" class="sectheader"><img src="../images/steel-pin.gif" width="64" height="10"><br>
      Creation</td>
    <td width="14">&nbsp;</td>
    <td valign="top">
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr>
          <td>
            <p>You can use Acrobat to edit forms using the Advanced Editing tools
              available under the Tools menu. </p>
            <p>However if you choose items from the Forms menu or toolbar then
              you will probably find that you end up editing your form in Adobe LiveCycle
              Designer rather than Acrobat.</p>
            <p>Adobe  Designer is an application which comes with Acrobat Pro.
              It uses PDF as an output medium. However the way that Designer operates
              means that forms created by Designer are fundamentally different
              from forms created by Acrobat.</p>
            <p>For example an Acrobat created form typically contains a background
              and then a set of fields. The fields operate separately from the
              background.</p>
            <p>Adobe Designer created forms do not make this distinction. They
              use a separate data store to specify the fields. The PDF content
              is merely the visible rendition of this field specification. The
              underlying field specification is made up of chunks of XML embedded
              in the PDF. This XML format is known as XFA - Adobe XML Forms Architecture. </p>
            <p>XFA is referenced in, but is not part of, the ISO standard for PDF.</p>
            <p>Because Designer documents are PDF documents you can add content
              to them using standard ABCpdf methods of adding PDF content. However
              if you then open them then in Designer the content will most likely
              be deleted because Designer will recreate the PDF appearance using
              the separate field specification.</p>
            <p>Equally because the PDF output is merely the visible rendition
              of a separate field specification the fields and background may
              be tied to each other. So you might use ABCpdf to delete a field
              and find that the border has been left behind.</p>
            <p>In extreme cases the LiveCycle documents may not even contain any useful PDF content. Instead the PDF becomes a placeholder which contains an XFA document. The document is only really a thin PDF wrapper around XFA data. You will find that many PDF viewers (including Acrobat Reader X and earlier) cannot display this type of PDF properly.</p>
            <p>If you have input to the document creation process, using LifeCycle to save the file as &quot;Adobe Static PDF Form&quot; may help.</p>
            <p>If you want to modify forms you will generally find it easier to
              work with Acrobat created forms than Designer created ones.</p>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
