<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Styled Text</TITLE>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="../mystyles.css">
<link rel="stylesheet" href="../prism.css">
<script src="../prism.js"></script>
<META content="MSHTML 6.00.6000.16735" name=GENERATOR>
</HEAD>
<BODY bgColor=#ffffff>
<TABLE cellSpacing=4 cellPadding=0 border=0>
  <TBODY>
  <TR>
    <TD vAlign=top><IMG height=60 src="../images/goo.gif" width=58></TD>
    <TD width=14>&nbsp;</TD>
    <TD>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD class=pageheader>Styled Text</TD>
          <TD width=60>&nbsp;</TD>
          <TD>&nbsp;</TD></TR>
        <TR>
          <TD background=../images/steel-line-3.gif height=11></TD>
          <TD width=60 background=../images/steel-line-3.gif height=11></TD>
          <TD height=11><IMG height=11 src="../images/steel-blob-11.gif"
            width=11></TD></TR>
        <TR>
          <TD>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10
      src="../images/steel-pin.gif" width=64><BR>Basics</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>ABCpdf allows a range of HTML support for use when inserting
            multi-styled text. This can make it much easier to design documents
            and it can reduce the quantity of code required.</P>
            <P>The HTML support offered here does not cover the entire HTML
            specification. It covers a limited range of the HTML specification
            as is required for styled text. It also extends the HTML
            specification to allow you to precisely control elements of style
            not covered by HTML.</P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10
      src="../images/steel-pin.gif" width=64><BR>Chars</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>ABCpdf lets you use Unicode text. So you can use Styled Text
            with any language from English to Korean to Japanese.</P>
            <P>Normal character entities are standard HTML and hence use the
            Latin 1 character set. For example '&amp;#153;' equates to the
            trademark sign.</P>
            <P>For convenience you can also specify hex and octal character
            entities. For example '&amp;#65;', '&amp;#x0041;' and '&amp;#o0101;'
            all equate to lower case 'a'. Hex and octal character entities are
            assumed to be expressed in the Unicode character set. </P>
            <P>For most situations this will make no difference. However you
            should note that, above character 127, there are differences between
            the Latin 1 and the Unicode character set. For example the trademark
            symbol which is character 153 in Latin 1 is 8482 in Unicode.</P>
            <P>If you require fine control over hyphenation you can make use of
            the soft hyphen character &ndash; '&amp;shy;'. This character is invisible
            and indicates a point at which a chunk of text may reasonably be
            broken. </P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10
      src="../images/steel-pin.gif" width=64><BR>Tags</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>&nbsp;</TD>
          <TD>
            <P>You can add styled text to your documents using the <A
            href="../5-abcpdf/doc/1-methods/addtextstyled.htm">AddTextStyled</A> method.
            ABCpdf supports the following HTML tags and Attributes. </P>
            <UL>
              <LI><A href="#head">&lt;Head&gt;</A>
              <LI><A href="#body">&lt;Body&gt;</A>
              <LI><A href="#br">&lt;BR&gt;</A>
              <LI><A href="#p">&lt;P&gt;</A>
              <LI><A href="#h1">&lt;H1&gt; to &lt;H6&gt;</A>
              <LI><A href="#list">&lt;List&gt;</A>
              <LI><A href="#ul">&lt;UL&gt;</A>
              <LI><A href="#ol">&lt;OL&gt;</A>
              <LI><A href="#li">&lt;LI&gt;</A>
              <LI><A href="#a">&lt;A&gt;</A>
              <LI><A href="#b">&lt;B&gt;</A>
              <LI><A href="#i">&lt;I&gt;</A>
              <LI><A href="#u">&lt;U&gt;</A>
              <LI><A href="#strike">&lt;Strike&gt;</A>
              <LI><A href="#sup">&lt;Sup&gt;</A>
              <LI><A href="#sub">&lt;Sub&gt;</A>
              <LI><A href="#font">&lt;Font&gt;</A>
              <LI><A href="#stylerun">&lt;StyleRun&gt;</A>
              <LI><A href="#blockquote">&lt;BlockQuote&gt;</A>
              <LI><A href="#pre">&lt;Pre&gt;</A></LI>
              <LI><a href="#leader">&lt;Leader&gt;</a></LI>
            </UL>
            <H2><A name=head></A>&lt;Head&gt;</H2>
            <P>This tag is used to delimit the head of an HTML document. All
            content in the head is ignored.</P>
            <P>This tag does not accept any attributes.</P>
            <H2><A name=body></A>&lt;Body&gt;</H2>
            <P>This tag is used to mark the body of an HTML document. The body
            is a type of stylerun and so it accepts the same attributes as a <A
            href="#stylerun">stylerun</A> tag. It also accepts the following
            additional attributes.</P>
            <TABLE class=wsgtable borderColor=#ffffff cellSpacing=0
            cellPadding=3 border=5>
              <TBODY>
              <TR>
                <TD align=middle width=80><div align="center"><B>Attribute</B></div></TD>
                <TD><B>Notes</B></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">link</div></TD>
                <TD vAlign=top>
                  <P>The color for links (anchors) in subsequent content.</P>
                  <P>Colors are generally specified as RGB in hexadecimal
                  notation (e.g. color="#FF0000") or as one of the sixteen
                  standard color names (e.g. color=red").</P>
                  <P>You can specify grayscale colors by supplying only one
                  component (e.g. color="#80") and CMYK colors by supplying four
                  (e.g. color="#10203040"). CMYK component ranges between 0 and
                  100 inclusively so the hexadecimal representation is between
                  00 and 64.</P>
                  <P>You can specify high precision colors by passing an array of floating point numbers prepended by an at sign. Each number represents a component intensity in the range zero to one (e.g. color=&quot;@ 0.244 0.122 0.342&quot;). The number of components indicates whether the color space is grayscale, RGB or CMYK (e.g. color=&quot;@ 0.123 0.246 0.999 0.025&quot; would be CMYK). An alpha value can be indicated by prepending an 'a' to one of the components.</P>
                  <P>The default link color is RGB blue.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle><div align="center">vpos</div></TD>
                <TD vAlign=top><P>The vertical positioning for the block of text.</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/vpos.htm">XTextStyle.VPos</A> property.</P></TD>
              </TR>
              </TBODY></TABLE>
            <H2><A name=br></A>&lt;BR&gt;</H2>
            <P>This tag is used to force a line break. It also accepts the following
            additional attributes.</P>
            <TABLE class=wsgtable borderColor=#ffffff cellSpacing=0
            cellPadding=3 border=5>
              <TBODY>
                <TR>
                  <TD align=middle width=80><div align="center"><B>Attribute</B></div></TD>
                  <TD><B>Notes</B></TD>
                </TR>
                <TR>
                  <TD vAlign=top align=middle width=80><div align="center">collapse</div></TD>
                  <TD vAlign=top><P>Whether to vertically collapse the line break or not.</P>
                      <P>Normally, line breaks are affected by the paragraph and line spacing. However sometimes you may need a minimal line break with no spacing. By setting this property to true you can accomplish this.</P>
                      <P>The default collapse value is false.</P></TD>
                </TR>
              </TBODY>
            </TABLE>
            <H2><A name=p></A>&lt;P&gt;</H2>
            <P>This tag is used to mark up paragraphs. Paragraphs are types of
            styleruns and so they accept the same attributes as <A
            href="#stylerun">stylerun</A> tags. They also accept the following
            additional attributes.</P>
            <TABLE class=wsgtable borderColor=#ffffff cellSpacing=0
            cellPadding=3 border=5>
              <TBODY>
              <TR>
                <TD align=middle width=80><div align="center"><B>Attribute</B></div></TD>
                <TD><B>Notes</B></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">align</div></TD>
                <TD vAlign=top>
                  <P>The text alignment for the paragraph. If no value is
                  specified it is assumed that the text should be left
                  aligned.</P>
                  <P>You can specify left aligned text (e.g. align=left), right
                  aligned text (e.g. align=right), centered text (e.g. align=center)
                  or justified text (e.g. align=justify).</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/hpos.htm">XTextStyle.HPos</A> or
                  <A
                  href="../5-abcpdf/xtextstyle/2-properties/justification.htm">XTextStyle.Justification</A>
                  properties.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">break</div></TD>
                <TD vAlign=top>
                  <P>The line breaking style for the paragraph. This attribute
                  takes a comma delimited list of hints used to control how
                  lines are broken when chaining from one text area to another.                  </P>
                  <P>You can specify that a paragraph should be kept with the
                  next one by assigning the keepwithnext hint (e.g.
                  break=keepwithnext). You can specify that there should be a
                  break before a paragraph by specifying the breakbefore hint
                  (e.g. break=breakbefore).</P>
                  <P>For details on chaining see the <A
                  href="../5-abcpdf/doc/1-methods/addtextstyled.htm">AddTextStyled</A>
                  function.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">spacebefore</div></TD>
                <TD vAlign=top>
                  <P>Normally paragraphs have vertical space before and
                  after the body text. </P>
                  <P>By setting this attribute to zero you can remove vertical
                  space before the paragraph.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">spaceafter</div></TD>
                <TD vAlign=top>
                  <P>Normally paragraphs have vertical space before and
                  after the body text. </P>
                  <P>By setting this attribute to zero you can remove vertical
                  space after the paragraph.</P></TD></TR></TBODY></TABLE>
            <H2><A name=h1></A>&lt;H1&gt; to &lt;H6&gt;</H2>
            <P>This tag is used to mark header sections. Headers are types of
            paragraphs and so they accept the same attributes as <A
            href="#p">paragraph</A> tags.</P>
            <H2><A name=list></A>&lt;List&gt;</H2>
            <P>This tag is used to indicate a list of items. Each list item
            consists of a marker and some text. Markers may be bullet points,
            numbers or letters.</P>
            <P>Lists are types of paragraphs and so they accept the same
            attributes as <A href="#p">paragraph</A> tags. They also accept the
            following additional attributes.</P>
            <TABLE class=wsgtable borderColor=#ffffff cellSpacing=0
            cellPadding=3 border=5>
              <TBODY>
              <TR>
                <TD align=middle width=80><div align="center"><B>Attribute</B></div></TD>
                <TD><B>Notes</B></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">itemindent</div></TD>
                <TD vAlign=top>
                  <P>The indent of the item text from the left of the marker.
                  This value is measured in the current units.</P>
                  <P>By altering this property you can change the distance
                  between the marker and the text.</P>
                  <P>The default is dynamically determined based on the type of
                  marker and the size of the text.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">markerindent</div></TD>
                <TD vAlign=top>
                  <P>The indent of the left of the marker from the current left
                  of the surrounding text. This value is measured in the current
                  units.</P>
                  <P>By altering this property you can alter the indent
                  distance for the markers in the list.</P>
                  <P>The default is dynamically determined based on the type of
                  marker and the size of the text.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">start</div></TD>
                <TD vAlign=top>
                  <P>Specifies the starting number for the first item in the
                  list. </P>
                  <P>This is only used when ordered markers are specified.</P>
                  <P>The default is one.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">type</div></TD>
                <TD vAlign=top>
                  <P>Specifies the type of marker to use. You can use either
                  ordered markers or unordered markers.</P>
                  <P>Ordered markers increment for each item in the list. You
                  can use numbers (type=1), lower case roman numerals (type=i),
                  upper case roman numerals (type=I), lower case letters
                  (type='a'), upper case letters (type=A) or none (type=none).                  </P>
                  <P>Unordered markers are the same for each item in the list.
                  You can specify bullet points (type=disk), hollow bullets
                  (type=circle) or squares (type=square).</P>
                  <P></P>
                  <P>The default type is 'disk'.</P></TD></TR></TBODY></TABLE>
            <H2><A name=ul></A>&lt;UL&gt;</H2>
            <P>The UL tag is used to indicate an unordered list. Unordered lists
            are types of lists and so they accept the same attributes as <A
            href="#list">list</A> tags. The default marker is the bullet point
            but the marker will change as lists are nested within each
other.</P>
            <H2><A name=ol></A>&lt;OL&gt;</H2>
            <P>The OL tag is used to indicate an ordered list. Ordered lists are
            types of lists and so they accept the same attributes as <A
            href="#list">list</A> tags. The default marker type is numeric.</P>
            <H2><A name=li></A>&lt;LI&gt;</H2>
            <P>This tag is used to indicate an item within a list. It accepts
            the following attributes.</P>
            <TABLE class=wsgtable borderColor=#ffffff cellSpacing=0
            cellPadding=3 border=5>
              <TBODY>
              <TR>
                <TD align=middle width=80><div align="center"><B>Attribute</B></div></TD>
                <TD><B>Notes</B></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">value</div></TD>
                <TD vAlign=top>
                  <P>Specifies the number for this list item.</P>
                  <P>Subsequent items are numbered incrementally from this new
                  value.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">type</div></TD>
                <TD vAlign=top>
                  <P>Specifies the type of marker to use. </P>
                  <P>You can use the same types as you find in the type
                  attribute of the <A href="#list">list</A>
              tag.</P></TD></TR></TBODY></TABLE>
            <H2><A name=a></A>&lt;A&gt;</H2>
            <P>The anchor tag is used to mark subsequent content as a hyperlink.
            Anchors are types of styleruns and so they accept the same
            attributes as <A href="#stylerun">stylerun</A> tags. They also
            accept the following additional attributes.</P>
            <TABLE class=wsgtable borderColor=#ffffff cellSpacing=0
            cellPadding=3 border=5>
              <TBODY>
              <TR>
                <TD align=middle width=80><div align="center"><B>Attribute</B></div></TD>
                <TD><B>Notes</B></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">href</div></TD>
                <TD vAlign=top>
                  <P>The URL of the destination.</P></TD></TR></TBODY></TABLE>
            <P>Hyperlinks normally appear as blue underlined text. You can
            override this style using the <A href="#body">body</A> link
            attribute or by using <A href="#stylerun">stylerun</A> attributes in
            the body of your anchor tag.</P>
            <P></P>
            <H2><A name=b></A>&lt;B&gt;</H2>
            <P>This tag is used to apply a bold text style to subsequent
            content. </P>
            <P>ABCpdf will attempt to reference an appropriate bold font. If it
            cannot locate one it will generate a synthetic bold style using the
            <A
            href="../5-abcpdf/xtextstyle/2-properties/bold.htm">XTextStyle.Bold</A>
            property.</P>
            <P>This tag does not accept any attributes.</P>
            <H2><A name=i></A>&lt;I&gt;</H2>
            <P>This tag is used to apply an italic text style to subsequent
            content. </P>
            <P>ABCpdf will attempt to reference an appropriate italic font. If
            it cannot locate one it will generate a synthetic italic style using
            the <A
            href="../5-abcpdf/xtextstyle/2-properties/italic.htm">XTextStyle.Italic</A>
            property. </P>
            <P>This tag does not accept any attributes.</P>
            <H2><A name=u></A>&lt;U&gt;</H2>
            <P>This tag is used to apply an underline text style to subsequent
            content. The effect is identical to changing the <A
            href="../5-abcpdf/xtextstyle/2-properties/underline.htm">XTextStyle.Underline</A>
            property.</P>
            <P>This tag does not accept any attributes.</P>
            <H2><A name=strike></A>&lt;Strike&gt;</H2>
            <P>This tag is used to apply an strike-through text style to
            subsequent content. The effect is identical to changing the <A
            href="../5-abcpdf/xtextstyle/2-properties/strike.htm">XTextStyle.Strike</A>
            property.</P>
            <P>This tag does not accept any attributes.</P>
            <H2><A name=sup></A>&lt;Sup&gt;</H2>
            <P>This tag is used to indicate text to be rendered as
            superscript.</P>
            <P>This tag does not accept any attributes.</P>
            <H2><A name=sub></A>&lt;Sub&gt;</H2>
            <P>This tag is used to indicate text to be rendered as
subscript.</P>
            <P>This tag does not accept any attributes.</P>
            <H2><A name=font></A>&lt;Font&gt;</H2>
            <P>The font tag is used to change the current font style. Fonts are
            types of styleruns and so they accept the same attributes as <A
            href="#stylerun">stylerun</A> tags. They also accept the following
            additional attributes.</P>
            <TABLE class=wsgtable borderColor=#ffffff cellSpacing=0
            cellPadding=3 border=5>
              <TBODY>
              <TR>
                <TD align=middle width=80><div align="center"><B>Attribute</B></div></TD>
                <TD><B>Notes</B></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">size</div></TD>
                <TD vAlign=top>
                  <P>The font size for subsequent content.</P>
                  <P>You can set absolute font size by specifying an integer
                  ranging from one to seven (e.g. size=6). Or you can specify a
                  font size relative to the current base font size (e.g.
                  size="+1").</P>
                  <P>For greater control over the size of text you should use
                  the <A href="#fontsize">fontsize</A> attribute.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">color</div></TD>
                <TD vAlign=top>
                  <P>The color for subsequent content.</P>
                  <P>Colors are generally specified as RGB in hexadecimal
                  notation (e.g. color="#FF0000") or as one of the sixteen
                  standard color names (e.g. color=red").</P>
                  <P>You can specify grayscale colors by supplying only one
                  component (e.g. color="#80") and CMYK colors by supplying four
                  (e.g. color="#10203040"). CMYK component ranges between 0 and
                  100 inclusively so the hexadecimal representation is between
                  00 and 64.</P>
                  <P>You can specify an alpha value for your color by appending
                  a slash and a hex value to the end of your color string (e.g.
                  color="#10203040/C0").</P>
                  <P>You can specify that no color should be applied by using
                  the special 'none' keyword (e.g. color="none"). This can be
                  useful if you wish to specify your own color operators in your
                  own low level code.</P>
                  <P>You can specify high precision colors by passing an array of floating point numbers prepended by an at sign. Each number represents a component intensity in the range zero to one (e.g. color=&quot;@ 0.244 0.122 0.342&quot;). The number of components indicates whether the color space is grayscale, RGB or CMYK (e.g. color=&quot;@ 0.123 0.246 0.999 0.025&quot; would be CMYK). An alpha value can be indicated by prepending an 'a' to one of the components.</P>
                  <P>This attribute sets both the stroke and fill
              colors.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">color-stroke</div></TD>
                <TD vAlign=top>
                  <P>The stroke color for subsequent content.</P>
                  <P>This attribute allows you to specify the stroke color
                  independently from the fill color.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">color-fill</div></TD>
                <TD vAlign=top>
                  <P>The fill color for subsequent content.</P>
                  <P>This attribute allows you to specify the fill color
                  independently from the stroke color.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">csid</div></TD>
                <TD vAlign=top>
                  <P>The color space for subsequent content.</P>
                  <P>This attribute takes an Object ID obtained from a previous
                  call to <A
                  href="../5-abcpdf/doc/1-methods/addcolorspacefile.htm">AddColorSpaceFile</A>
                  or <A
                  href="../5-abcpdf/doc/1-methods/addcolorspacespot.htm">AddColorSpaceSpot</A>.</P>
                  <P>This attribute sets both the stroke and fill color
                  space.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">csid-stroke</div></TD>
                <TD vAlign=top>
                  <P>The stroke color space for subsequent content.</P>
                  <P>This attribute allows you to specify the stroke color space
                  independently from the fill color space.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">csid-fill</div></TD>
                <TD vAlign=top>
                  <P>The fill color space for subsequent content.</P>
                  <P>This attribute allows you to specify the fill color space
                  independently from the stroke color space.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">face</div></TD>
                <TD vAlign=top>
                  <P>The font typeface for subsequent content.</P>
                  <P>This value takes a comma delimited list of typeface names,
                  listed in order of preference. Fonts are referenced rather
                  than embedded. </P>
                  <P>For greater control over the way that fonts are added to
                  your document you should use the <A href="#pid">pid</A>
                  attribute.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">embed</div></TD>
                <TD vAlign=top>
                  <P>Whether to embed or reference fonts added via the face
                  attribute.</P>
                  <P>For details see the <A
                  href="../5-abcpdf/doc/1-methods/embedfont.htm">EmbedFont</A>
                  method. The default is false.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">language</div></TD>
                <TD vAlign=top>
                  <P>What language to use when embedding fonts added via the
                  face attribute.</P>
                  <P>For details see the <A
                  href="../5-abcpdf/doc/1-methods/embedfont.htm">EmbedFont</A>
                  method. The default is Latin.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">protection</div></TD>
                <TD vAlign=top>
                  <P>Whether to apply font protection when embedding fonts
                  added via the face attribute.</P>
                  <P>For details see the <A
                  href="../5-abcpdf/doc/1-methods/embedfont.htm">EmbedFont</A>
                  method. The default is true.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">font-family</div></TD>
                <TD vAlign=top>
                  <P>The font family for subsequent content.</P>
                  <P>This value operates in the same way as the face attribute
                  detailed above.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">font-style</div></TD>
                <TD vAlign=top>
                  <P>The font style.</P>
                  <P>This attribute can take the values oblique, italic or
                  normal. Normal is the default.</P>
                  <P>NB. ABCpdf does not currently make a distinction between
                  oblique and italic styles.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">font-weight</div></TD>
                <TD vAlign=top>
                  <P>The font weight.</P>
                  <P>This attribute can take the a value between 100 (lightest)
                  and 900 (heaviest). </P>
                  <P>It can also take the following pre-defined values &ndash; normal,
                  bold, bolder and lighter.</P>
                  <P>The default is normal &ndash; 400.</P>
                  <P>NB. ABCpdf cannot currently synthesize font weights of less
                  than 400. </P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">rendering-mode</div></TD>
                <TD vAlign=top>
                  <P>The text rendering mode. Possible values are:</P>
                  <P>0 Fill text (default)<BR>1 Stroke text.<BR>2 Fill, then
                  stroke text.<BR>3 Neither fill nor stroke text
                  (invisible).<BR>4 Fill text and add to path for clipping.<BR>5
                  Stroke text and add to path for clipping.<BR>6 Fill, then
                  stroke text and add to path for clipping.<BR>7 Add text to
                  path for clipping.</P>
                  <P>NB. The outline style is a more commonly used alternative
                  to the rendering-mode.</P></TD></TR></TBODY></TABLE>
            <H2><A name=stylerun></A>&lt;StyleRun&gt;</H2>
            <P>The stylerun tag is used to change the current style. It accepts
            the following attributes.</P>
            <TABLE class=wsgtable borderColor=#ffffff cellSpacing=0
            cellPadding=3 border=5>
              <TBODY>
              <TR>
                <TD align=middle width=80><div align="center"><B>Attribute</B></div></TD>
                <TD><B>Notes</B></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center"><A name=pid></A>pid</div></TD>
                <TD vAlign=top>
                  <P>The font typeface for subsequent content.</P>
                  <P>This attribute take an Object ID obtained from a previous
                  call to <A
                  href="../5-abcpdf/doc/1-methods/addfont.htm">AddFont</A> or
                  <A
                  href="../5-abcpdf/doc/1-methods/embedfont.htm">EmbedFont</A>.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center"><A
                  name=fontsize></A>fontsize</div></TD>
                <TD vAlign=top>
                  <P>The font size for subsequent content.</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/size.htm">XTextStyle.Size</A>
                  property.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">charspacing</div></TD>
                <TD vAlign=top>
                  <P>The character spacing for subsequent content.</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/charspacing.htm">XTextStyle.CharSpacing</A>
                  property.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">wordspacing</div></TD>
                <TD vAlign=top>
                  <P>The word spacing for subsequent content.</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/wordspacing.htm">XTextStyle.WordSpacing</A>
                  property.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">justification</div></TD>
                <TD vAlign=top>
                  <P>The justification for subsequent content.</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/justification.htm">XTextStyle.Justification</A>
                  property.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">hpos</div></TD>
                <TD vAlign=top>
                  <P>The horizontal positioning for subsequent content.</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/hpos.htm">XTextStyle.HPos</A>
                  property.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">bold</div></TD>
                <TD vAlign=top>
                  <P>Whether to apply a synthetic bold style to subsequent
                  content.</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/bold.htm">XTextStyle.Bold</A>
                  property.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">italic</div></TD>
                <TD vAlign=top>
                  <P>Whether to apply a synthetic italic style subsequent
                  content.</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/italic.htm">XTextStyle.Italic</A>
                  property.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">underline</div></TD>
                <TD vAlign=top>
                  <P>Whether to underline subsequent content.</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/underline.htm">XTextStyle.Underline</A>
                  property.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">strike</div></TD>
                <TD vAlign=top>
                  <P>Whether to apply a strike-through effect to subsequent
                  content.</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/strike.htm">XTextStyle.Strike</A>
                  property.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">strike2</div></TD>
                <TD vAlign=top>
                  <P>Whether to apply a double strike-through effect to
                  subsequent content.</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/strike2.htm">XTextStyle.Strike2</A>
                  property.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">outline</div></TD>
                <TD vAlign=top>
                  <P>Whether to outline subsequent content.</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/outline.htm">XTextStyle.Outline</A>
                  property.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">linespacing</div></TD>
                <TD vAlign=top>
                  <P>The line spacing for subsequent content.</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/linespacing.htm">XTextStyle.LineSpacing</A>
                  property.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">paraspacing</div></TD>
                <TD vAlign=top>
                  <P>The paragraph spacing for subsequent content.</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/paraspacing.htm">XTextStyle.ParaSpacing</A>
                  property.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle><div align="center">collapselines</div></TD>
                <TD vAlign=top><P>By default this value is false which means that <A
                  href="../5-abcpdf/xtextstyle/2-properties/linespacing.htm">XTextStyle.LineSpacing</A> will be applied before each line.</P>
                    <P>However by setting this parameter to false you can disable  line spacing for the first line  of text added in a call to <A
            href="../5-abcpdf/doc/1-methods/addtextstyled.htm">AddTextStyled</A>. This has the effect of moving the text up so it butts up against the top of the current  <a href="../5-abcpdf/doc/2-properties/rect.htm">Doc.Rect</a>. </P></TD>
              </TR>
              <TR>
                <TD vAlign=top align=middle><div align="center">collapseparas</div></TD>
                <TD vAlign=top><P>By default this value is false which means that <A
                  href="../5-abcpdf/xtextstyle/2-properties/paraspacing.htm">XTextStyle.ParaSpacing</A> will be applied before each paragraph.</P>
                    <P>However by setting this parameter to false you can disable  paragraph spacing for the first line  of text added in a call to <A
            href="../5-abcpdf/doc/1-methods/addtextstyled.htm">AddTextStyled</A>. This has the effect of moving the text up so it butts up against the top of the current <a href="../5-abcpdf/doc/2-properties/rect.htm">Doc.Rect</a>. </P></TD>
              </TR>
              <TR>
                <TD vAlign=top align=middle><div align="center">leftmargin</div></TD>
                <TD vAlign=top><P>The left margin for subsequent content.</P>
                    <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/leftmargin.htm">XTextStyle.LeftMargin</A> property.</P></TD>
              </TR>
              <TR>
                <TD vAlign=top align=middle><div align="center">leftmargins</div></TD>
                <TD vAlign=top><P>Variable left margins for subsequent content.</P>
                  <P>The leftmargin property applies one margin to all text in the range. The leftmargins property allows you to apply variable margins depending on how far down the page the text is being positioned. This can be used to flow text around objects such as pictures.</P>
                  <P>This tag takes a an array of floating point numbers. The array must be a multiple of three long and each triplet defines a margin  for a particular vertical range within the <a href="../5-abcpdf/doc/2-properties/rect.htm">Doc.Rect</a>. The values are [yMin yMax Margin] where the y values are measured downwards from the top of the <a href="../5-abcpdf/doc/2-properties/rect.htm">Doc.Rect</a>.  </P>
                  <P>For typical code see the <a href="../4-examples/02-textflow2.htm">Text Flow Round Image</a> example.</P></TD>
              </TR>
              <TR>
                <TD vAlign=top align=middle><div align="center">rightmargin</div></TD>
                <TD vAlign=top><P>The right margin for subsequent content.</P>
                    <P>This property is similar to the leftmargin  attribute but allows you to specify a margin on the right hand side of the text block.</P></TD>
              </TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">rightmargins</div></TD>
                <TD vAlign=top>
                  <P>Variable right margins for subsequent content.</P>
                  <P>This property is similar to the leftmargins  attribute but allows you to specify margins on the right hand side of the text block.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">indent</div></TD>
                <TD vAlign=top>
                  <P>The indent for subsequent content.</P>
                  <P>Changing this attribute is identical to changing the <A
                  href="../5-abcpdf/xtextstyle/2-properties/indent.htm">XTextStyle.Indent</A>
                  property.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">fixedwidth</div></TD>
                <TD vAlign=top>
                  <P>A fixed with for the style run.</P>
                  <P>Each style run has a width. The width is normally
                  determined by the size of the characters in the text. </P>
                  <P>Under some situations it can be useful to assign a fixed
                  width to the entire style run. This can be used for aligning
                  text and for bullet pointed lists.</P>
                  <P>Note that the fixed width is specific to each style run and may be inherited by elements within it. So if you nest one stylerun within a container with a fixedwidth attribute, you will end up with two fixed width styleruns. The result may be content twice as wide as you are expecting.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">textrise</div></TD>
                <TD vAlign=top>
                  <P>The text rise for subsequent content.</P>
                  <P>Positive values shift the text upwards. Negative values
                  shift it downwards. The textrise distance is measured in the
                  current units.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">annots</div></TD>
                <TD vAlign=top>
                  <P>Annotations associated with subsequent content.</P>
                  <P>You can use a link annotation to insert a hyperlink (e.g.
                  annots='link:http://www.google.com/').</P>
                  <P>You can use a goto annotation to insert a link to another
                  page in the document (e.g. annots='goto:3'). The number
                  indicates the page number. Note that the destination page must
                  exist at the point at which the text is inserted.</P>
                  <P>You can use a text annotation to insert a textual note (e.g.
                  annots='text:A note to be inserted').</P>
                  <P>You can use highlight, squiggly, underline, and strikeout
                  annotations for text markup (e.g. annots='highlight:some
                  contents').</P>
                  <P>While other types of annotations have textual contents
                  (that are specified after colon), link and goto annotations
                  do not. However, you can still mark link and goto annotations
                  with (non-displayed) textual contents using "contents:" so that
                  you can later identify them easily with <a
                  href="../5-abcpdf/doc/1-methods/getinfo.htm">Doc.GetInfo</a>
                  or <a
                  href="../6-abcpdf.objects/annotation/2-properties/contents.htm">Annotation.Contents</a>
                  (e.g. annots='link:http://www.google.com/;contents:alternative description').</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">dir</div></TD>
                <TD vAlign=top>
                  <P>The default reading direction.</P>
                  <P>Bi-directional text such as Hebrew or Arabic is laid out in
                  the context of the default reading direction. </P>
                  <P>You can specify left to right paragraph direction (e.g.
                  dir=ltr), right to left paragraph direction (e.g. dir=rtl), or
                  use the default of none (e.g. dir=none).</P>
                  <P>When none is specified the original ABCpdf left to right
                  layout is preserved for compatibility with previous
                  versions.</P>
                  <P>Arabic requires special text shaping for contextual ligatures and combining characters. This is because each character has different forms depending on placement within a string. Each character can be independent, initial, medial or final. This text shaping is only performed if a reading direction is set. So for Arabic support you should always specify a default reading direction.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">canbreakafter</div></TD>
                <TD vAlign=top>
                  <P>Characters at which lines may be broken.</P>
                  <P>Normally ABCpdf will only break lines after certain
                  characters like spaces. You can indicate additional characters
                  after which a break is acceptable using this parameter.</P>
                  <P>For example to allow a break after hyphens or underscores
                  you might use canbreakafter='-_'.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">breakengine</div></TD>
                <TD vAlign=top>
                  <P>The default line breaking engine. </P>
                  <P>The line breaking engine determines at which points lines
                  can be broken.</P>
                  <P>You can specify the Uniscribe line breaking engine (e.g.
                  breakengine=uniscribe), the Unicode line breaking engine (e.g.
                  breakengine=unicode), or use the default of auto (e.g.
                  breakengine=auto).</P>
                  <P>When auto is specified the Uniscribe engine is used for
                  installations on Windows XP and 2003 and the Unicode engine is
                  used for installations on Windows NT and 2000.</P></TD></TR><TR>
                <TD vAlign=top align=middle width=80><div align="center">wrap</div></TD>
                <TD vAlign=top>
                  <P>Whether lines should wrap or not. The default is true.</P>
                  <P>If wrapping is turned off (ie by setting this value to
                  false) then lines of text extending outside the drawing area
                  will be truncated.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">transform</div></TD>
                <TD vAlign=top>
                  <P>The transformation for text.</P>
                  <P>The format of this value is the same as that of <a
                  href="../5-abcpdf/xtransform/2-properties/string.htm">XTransform.String</a>.
                  The default value is the identity. This attribute takes precedence
                  over the rotate attribute. The numeric values can optionally be
                  preceded by 'fixed' (e.g. transform='fixed 2 0 0 2 0 0'), which fixes
                  the transformation origin.</P>
                  <P>The direction to which the rightward direction (the default
                  primary advancement direction) is mapped is the primary
                  advancement direction. The direction in which a new line is
                  offset (i.e. the direction of the offset caused by starting a new
                  line) is the secondary advancement direction.</P>
                  <P>When the origin is not fixed and the StyleRun is broken into
                  pieces (because of nested tags or line breaks, for example), the
                  transformation is applied to each piece individually. When the
                  primary advancement direction is not horizontal, the effect is
                  observably different as each piece starts at the original
                  baseline.</P>
                  <P>When the origin is fixed, each piece (without its own
                  transformation) appears as if it starts at where the previous
                  piece ends because the transformation origin is fixed at the
                  beginning of the StyleRun.</P>
                  <P>The secondary advancement direction is always perpendicular to
                  the primary advancement direction regardless of skews in the
                  transformation. (This is meaningful only in the context of multiple
                  lines within a StyleRun with a fixed transformation.) In which of
                  the two opposite directions the secondary advancement is
                  depends on the direction to which the downward direction (the
                  default secondary advancement direction) is mapped. This allows
                  artificial styles that simulate oblique/italic without affecting
                  the secondary advancement.</P>
                  <P>Decorations (underline and strike-through) are placed at the
                  correct locations without distortion so they remain rectangular.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">rotate</div></TD>
                <TD vAlign=top>
                  <P>The rotation for text.</P>
                  <P>This value is measured in degrees anticlockwise. The
                  default is zero. This attribute is ignored if the transform
                  attribute is present. The numeric value can be preceded by 'fixed'
                  (e.g. rotate='fixed 30'), which fixes the transformation origin as
                  explained in the transform attribute.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">ascender</div></TD>
                <TD vAlign=top>
                  <P>The default size of the ascender.</P>
                  <P>The PDF specification defines text as drawn from a point
                  anchored at the baseline of a letter. So to place a chunk of
                  text inside a box the text needs to be shifted downwards by
                  the distance between the baseline and the top of the letter.
                  This distance is typically known as the ascender height.</P>
                  <P>ABCpdf uses its own methods to determine the ascender
                  height for fonts. However using this attribute you can
                  override these methods and specify your own values. This can
                  be useful for situations in which you are drawing text
                  anchored at the baseline rather than the top of the
glyphs.</P>
                  <P>The ascender value is measured in 1000ths of the font
                  height. A typical value might be 800.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle><div align="center">ligature-script</div></TD>
                <TD vAlign=top><p>The script for the insertion of ligatures such as 'ff' and 'ffl. Ligatures sets are automatically retrieved from the current font. </p>
                    <p>Determines which OpenType shaping engine/feature set to use. </p>
                  <p>The script determines how glyphs connect and shape. The language fine-tunes shaping with localized rules within the same script.</p>
                  <p>Scripts are specified using four character ISO 15924 Codes. A typical value would be &quot;Latn&quot; (Latin) or &quot;Hant&quot; (Traditional Chinese).</p>
                  <p>For  Tamil perhaps one might use &quot;&lt;stylerun dir=ltr ligature-language=ta-IN ligature-script=Taml&gt;&quot;.</p></TD>
              </TR>
              <TR>
                <TD vAlign=top align=middle><div align="center">ligature-language</div></TD>
                <TD vAlign=top><p>The language for the insertion of ligatures such as 'ff' and 'ffl. Ligatures sets are automatically retrieved from the current font.</p>
                  <p>The language helps the shaping engine apply language-specific typographic rules. For example take the German word &quot;Stra&szlig;e&quot;. The &quot;&szlig;&quot; character is specific to German and represents a double s. In Switzerland this character is not used and is instead replaced with a double s. </p>
                  <p>For a font designed to support the German speaking market, OpenType rules in the font might vary the appearance of this character. With  the language set to German German (de-DE) we might see &quot;Stra&szlig;e&quot; and in Swiss German (de-CH) we might see &quot;Strasse&quot;.</p>
                  <p>The script determines how glyphs connect and shape. The language fine-tunes shaping with localized rules within the same script.</p>
                  <p>Languages are specified using IEFT language tags. A typical value would be &quot;en-us&quot;.</p>
                    <p>Ligatures can operate for more complex stylistic reasons than just the ones detailed above. Contextual alternates are a generic mechanism by which the particular glyph that is used is selected dependent on the characters that surround it. </p>
                    <p>This can be used for cursive scripts in which the characters flow and join together and for pseudo random scripts in which the glyphs used for a specific character vary. You can read more about this on typography sites such as <a target="_blank" href="https://ilovetypography.com/2011/04/01/engaging-contextuality/">iLoveTypgraphy</a>. </p>
                    <p>To engage support for contextual-alternates you need to set the text direction  to something other than default (typically you would change it to dir=ltr) and also set the ligature-language (typically  ligature-language=en-us).</p>
                    <p>For  Hindi one might use &quot;&lt;stylerun dir=ltr ligature-language=hi-IN ligature-script=Deva&gt;&quot;.</p>                    </TD>
              </TR>
              <TR>
                <TD vAlign=top align=middle><div align="center">tag-start</div></TD>
                <TD vAlign=top><p>This tag is used to insert raw content into the PDF content stream. </p>
                  <p>It is a low level construct which can be used for the insertion of operators like BDC and EMC. However since the content stream is sensitive, be careful only to use these operators if you are sure of what you are doing. Incorrect use is likely to corrupt the page.</p>
                  <p>You can specify a starting tag for the point at which the tagged content is first written to stream and and ending tag for the point at which it finishes being written. These tags will be written outside a BT/ET block. For point based operators like MP you may wish to specify only a starting tag. Tags may be nested.</p>
                  <p>For MCIDs often you may not know an appropriate value to use. In this case you can use the special value <em>next_mcid</em> which will insert the next MCID available for the page.</p>
                  <p>Bear in mind that an item of text may be split across more than one page so there may be more than one set of start and end tags each enclosing a portion of the tagged text. For example take the following call,</p>
                  <p><code style="background: #f1f5f9; color: initial;border: 1px solid #c7cfd5;padding: 8px;display: block;">doc.AddTextStyled(&quot;&lt;p tag-start=\&quot;/H1 &lt;&lt;/MCID 1&gt;&gt; BDC\&quot; tag-end=\&quot;EMC\&quot;&gt;Some text.&lt;/p&gt;&quot;)</code></p>
                  <p>If the complete text fits on one page it might be represented as follows,</p>
                  <p><code style="background: #f1f5f9; color: initial;border: 1px solid #c7cfd5;padding: 8px;display: block;">/H1 &lt;&lt;/MCID 1&gt;&gt; BDC<br>
                    BT<br>
                    ...<br>
                    (Some Text) Tj<br>
                    ET<br>
                    EMC</code></p>
                  <p>However the words split across pages, you might end up with this on the first page,</p>
                  <p><code style="background: #f1f5f9; color: initial;border: 1px solid #c7cfd5;padding: 8px;display: block;">/H1 &lt;&lt;/MCID 1&gt;&gt; BDC<br>
                    BT<br>
                    ...<br>
                    (Some) Tj<br>
                    ET<br>
                    EMC</code></p>
                  <p>and this on the second.</p>
                  <p><code style="background: #f1f5f9; color: initial;border: 1px solid #c7cfd5;padding: 8px;display: block;">/H1 &lt;&lt;/MCID 1&gt;&gt; BDC<br>
                    BT<br>
                    ...<br>
                    (Text) Tj<br>
                    ET<br>
                    EMC</code></p>                  </TD>
              </TR>
              <TR>
                <TD vAlign=top align=middle><div align="center">tag-end</div></TD>
                <TD vAlign=top><p>This tag is used to insert raw content into the PDF content stream.</p>
                  <p>See  the tag-start attribute  above for details.</p></TD>
              </TR>
              </TBODY></TABLE>
            <H2><A name=blockquote></A>&lt;BlockQuote&gt;</H2>
            <P>This tag is used to indicate quotations. Block quotes are
            indented on the left and right relative to the surrounding text. The
            tag accepts the following attributes.</P>
            <TABLE class=wsgtable borderColor=#ffffff cellSpacing=0
            cellPadding=3 border=5>
              <TBODY>
              <TR>
                <TD align=middle width=80><div align="center"><B>Attribute</B></div></TD>
                <TD><B>Notes</B></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">leftindent</div></TD>
                <TD vAlign=top>
                  <P>The left indent for the block of text.</P>
                  <P>Distances are measured in the current units. The default is
                  36 points.</P></TD></TR>
              <TR>
                <TD vAlign=top align=middle width=80><div align="center">rightindent</div></TD>
                <TD vAlign=top>
                  <P>The right indent for the block of text.</P>
                  <P>Distances are measured in the current units. The default is
                  36 points.</P></TD></TR></TBODY></TABLE>
            <H2><A name=pre></A>&lt;Pre&gt;</H2>
            <P>This tag is used to indicate preformatted text. Spaces and line
            breaks are preserved.</P>
            <H2><A name=leader></A>&lt;Leader&gt;</H2>
            <P>This tag is used to create leaders for structures like a table of contents. A leader is a repeated character - most normally a period - which runs across the page from the heading on the left to the page number on the right. </P>
            <P>The item to be repeated is placed between the start and end tag of the leaders element. For example code see the <a href="../5-abcpdf/xtextstyle/2-properties/kerning.htm">XTextStyle.Kerning</a> property.</P>
            <P>The tag accepts
              the following attributes.</P>
            <TABLE class=wsgtable borderColor=#ffffff cellSpacing=0
            cellPadding=3 border=5>
              <TBODY>
                <TR>
                  <TD align=middle width=80><div align="center"><B>Attribute</B></div></TD>
                  <TD><B>Notes</B></TD>
                </TR>
                <TR>
                  <TD vAlign=top align=middle width=80><div align="center">align</div></TD>
                  <TD vAlign=top><P>Specifies whether  the leaders should be horizontally aligned with each other.</P>
                      <P>If the tag value is set to true then the individual items in the leader (typically period characters) will be aligned so that leaders on one line are horizontally aligned with the leaders on the next.</P>
                      <P>If the tag value is set to false then the alignment of the leaders on a particular line will be determined by the width of the text which precedes the leaders..</P>
                      <P>The default align is 'true'.</P></TD>
                </TR>
                <TR>
                  <TD vAlign=top align=middle width=80><div align="center">hpos</div></TD>
                  <TD vAlign=top><P>Specifies the alignment for the leaders.</P>
                    <P>The align and hpos tags are mutually incompatible. As such, specifying an hpos will automatically set the align to false.</P>
                    <P>A block of leaders may not exactly fill the gap between the item of text on the left and the item of text on the right. This setting controls how the block is aligned within this gap. It works in the same way as the <A
                  href="../5-abcpdf/xtextstyle/2-properties/hpos.htm">XTextStyle.HPos</A> property. So to center your block of leaders between the two items of text you would set the value to 0.5.</P>
                    <P>By default the hpos is blank.</P>                    </TD>
                </TR>
                  <TR>
                      <TD vAlign=top align=middle width=80><div align="center">padding</div></TD>
                      <TD vAlign=top>
                          <P>Specifies any padding for the leaders.</P>
                          <P>By default leaders will fit exactly into the gap between the header text and the page number. However it can be useful to be able to extend the leaders a little.</P>
                          <P>The padding is a distance measured in points, by which the leader will be extended. The effect of this is to push the page numbers out and past the Doc.Rect.Right. The main text remains in the Doc.Rect but the numbers are shifted to the right.</P>
                          <P>By default the padding is zero.</P>                      </TD>
                  </TR>
              </TBODY>
            </TABLE>
            <P>&nbsp;</P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
<P>&nbsp;</P></BODY></HTML>
