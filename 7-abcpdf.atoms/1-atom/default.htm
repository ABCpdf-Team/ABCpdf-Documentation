<html>
<head>
<title>Atom Class</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="../../mystyles.css">
<link rel="stylesheet" href="../../prism.css">
<script src="../../prism.js"></script></head>

<body bgcolor="#FFFFFF">
<table border="0" cellpadding="0" cellspacing="4">
  <tr> 
    <td valign="top"><img src="../../images/goo.gif" width="58" height="60"></td>
    <td width="14">&nbsp;</td>
    <td> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="pageheader"> Atom Class</td>
          <td width="60">&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
        <tr> 
          <td background="../../images/steel-line-3.gif" height="11"></td>
          <td background="../../images/steel-line-3.gif" height="11" width="60"></td>
          <td height="11"><img src="../../images/steel-blob-11.gif" width="11" height="11"></td>
        </tr>
        <tr> 
          <td> 
            <p>A PDF atomic object comprising a basic chunk of PDF data.</p>
            <p>If you are going to be using Atoms then you will want to download the <a target="_blank" href="http://partners.adobe.com/">Adobe PDF Specification</a>. This document explains the names and types that can be used and how they are interpreted.</p>
            <table border="0" cellpadding="10" class="backgrounder">
              <tr>
                <td><p><b>Common Operations. </b></p>
                    <p>Get a named property from the dictionary of an IndirectObject. In the example below we use the Type  property which is typically a name but the principles are similar for other entries of other types:</p>
                    <br><p><span class="language">[C#]</span><br>
                        <pre><code class="language-csharp">NameAtom type = io.Resolve(Atom.GetItem(io.Atom, &quot;Type&quot;)) as NameAtom;
</code></pre><br>
                        <br>
                        <span class="language">[Visual&nbsp;Basic]</span><br>
                        <pre><code class="language-vbnet">Dim type As NameAtom = io.Resolve(Atom.GetItem(io.Atom, &quot;Type&quot;))
</code></pre></p>
                  <p>Get an value out of an array atom. In the the event that the atom is not an array or does not have sufficient entries then the return value will be null. In the example below we are looking for entry two - this is the third entry since entries are zero based:</p>
              <p><span class="language">[C#]</span><br>
                        <pre><code class="language-csharp">NumAtom num = io.Resolve(Atom.GetItem(atom, 2)) as NumAtom;
</code></pre><br>
                        <br>
                        <span class="language">[Visual&nbsp;Basic]</span><br>
                        <pre><code class="language-vbnet">Dim num As NumAtom = io.Resolve(Atom.GetItem(atom, 2))
</code></pre></p>
                  <p>Get a stream referenced from a property of an IndirectObject. In the example below we use the FontFile2 property (a reference to an embedded TrueType font):</p>
                <p><span class="language">[C#]</span><br>
                      <pre><code class="language-csharp">StreamObject stream = io.ResolveObj(Atom.GetItem(io.Atom, &quot;FontFile2&quot;)) as StreamObject;
</code></pre><br>
                      <br>
                      <span class="language">[Visual&nbsp;Basic]</span><br>
                      <pre><code class="language-vbnet">Dim stream As StreamObject = io.ResolveObj(Atom.GetItem(io.Atom, &quot;FontFile2&quot;))
</code></pre></p>
                  <p>Add a named entry to an IndirectObject.  In the example below we add a V entry which is a string. We keep the returned StringAtom so we can manipulate the value:</p>
                  <p><span class="language">[C#]</span><br>
                      <pre><code class="language-csharp">StringAtom str = (StringAtom)Atom.SetItem(io.Atom, &quot;V&quot;, new StringAtom());
</code></pre><br>
                      <br>
                      <span class="language">[Visual&nbsp;Basic]</span><br>
                      <pre><code class="language-vbnet">Dim str As StringAtom = Atom.SetItem(io.Atom, &quot;V&quot;, New StringAtom())
</code></pre><br>
                  </p>
                  <p>Add a named entry to an IndirectObject.  In the example below we add an array entry to specify a border array. Rather than creating an ArrayAtom and specifying the individual values we just specify the raw string value of the object:</p>
                  <p><span class="language">[C#]</span><br>
                    <pre><code class="language-csharp">Atom.SetItem(io.Atom, &quot;Border&quot;, Atom.FromString(&quot;[ 0 0 1 ]&quot;));
</code></pre><br>
                    <br>
                    <span class="language">[Visual&nbsp;Basic]</span><br>
                    <pre><code class="language-vbnet">Atom.SetItem(io.Atom, &quot;Border&quot;, Atom.FromString(&quot;[ 0 0 1 ]&quot;))
</code></pre></p>
                </td>
              </tr>
            </table>
            <p>&nbsp;</p>
            <p><code><!--notcode-->System.Object<br>
              &nbsp;&nbsp;&nbsp;<b> WebSupergoo.ABCpdf13.Atoms.Atom</b><br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="../arrayatom/default.htm"> WebSupergoo.ABCpdf13.Atoms.ArrayAtom</a><br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="../boolatom/default.htm"> WebSupergoo.ABCpdf13.Atoms.BoolAtom</a><br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="../dictatom/default.htm"> WebSupergoo.ABCpdf13.Atoms.DictAtom</a><br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="../nameatom/default.htm"> WebSupergoo.ABCpdf13.Atoms.NameAtom</a><br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="../nullatom/default.htm"> WebSupergoo.ABCpdf13.Atoms.NullAtom</a><br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="../numatom/default.htm"> WebSupergoo.ABCpdf13.Atoms.NumAtom</a><br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="../refatom/default.htm"> WebSupergoo.ABCpdf13.Atoms.RefAtom</a><br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="../opatom/default.htm"> WebSupergoo.ABCpdf13.Atoms.OpAtom</a><br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="../stringatom/default.htm"> WebSupergoo.ABCpdf13.Atoms.StringAtom</a><br>
              <br>
              Implements: ICloneable, IDisposable, IEquatable&lt;Atom&gt;, IComparable&lt;Atom&gt;</code></p>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr> 
    <td valign="top">&nbsp; </td>
    <td width="14">&nbsp;</td>
    <td valign="top"> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="sectheader"> 
            <table class="wsgtable" cellpadding="3" cellspacing="0" border="5" bordercolor="#FFFFFF">
              <tr> 
                <td align="center" width="100"><b>Method</b></td>
                <td><b>Description</b></td>
              </tr>


<!-- autogen start -->
              <TR vAlign=top>
                <TD align=left><I><B>S&raquo;</B></I>&nbsp;
<A 
                  href="1-methods/4-fromstring.htm">FromString</A></TD>
                <TD>Create an appropriate type of Atom from a raw PDF string representation.</TD></TR>
              <TR vAlign=top>
                <TD align=left><I><B>S&raquo;</B></I>&nbsp;
<A 
                  href="1-methods/getbool.htm">GetBool</A></TD>
                <TD>Gets the Boolean value from the Atom if it is a BoolAtom.</TD></TR>
              <TR vAlign=top>
                <TD align=left><I><B>S&raquo;</B></I>&nbsp;
<A 
                  href="1-methods/getdouble.htm">GetDouble</A></TD>
                <TD>Gets the double value from the Atom if it is a NumAtom.</TD></TR>
              <TR vAlign=top>
                <TD align=left><I><B>S&raquo;</B></I>&nbsp;
<A 
                  href="1-methods/getid.htm">GetID</A></TD>
                <TD>Gets the Object ID value from the Atom if it is a RefAtom.</TD></TR>
              <TR vAlign=top>
                <TD align=left><I><B>S&raquo;</B></I>&nbsp;
<A 
                  href="1-methods/getint.htm">GetInt</A></TD>
                <TD>Gets the integer value from the Atom if it is a NumAtom.</TD></TR>
              <TR vAlign=top>
                <TD align=left><I><B>S&raquo;</B></I>&nbsp;
<A 
                  href="1-methods/getitem.htm">GetItem</A></TD>
                <TD>Gets the specified item from the Atom if it is of a type which contains other Atoms.</TD></TR>
              <TR vAlign=top>
                <TD align=left><I><B>S&raquo;</B></I>&nbsp;
<A 
                  href="1-methods/getname.htm">GetName</A></TD>
                <TD>Gets the Name value from the Atom if it is a NameAtom.</TD></TR>
              <TR vAlign=top>
                <TD align=left><I><B>S&raquo;</B></I>&nbsp;
<A 
                  href="1-methods/gettext.htm">GetText</A></TD>
                <TD>Gets the Text value from the Atom if it is a StringAtom.</TD></TR>
              <TR vAlign=top>
                <TD align=left><I><B>S&raquo;</B></I>&nbsp;
<A 
                  href="1-methods/removeitem.htm">RemoveItem</A></TD>
                <TD>Removes the named entry from the Atom if it is a DictAtom.</TD></TR>
              <TR vAlign=top>
                <TD align=left><I><B>S&raquo;</B></I>&nbsp;
<A 
                  href="1-methods/setitem.htm">SetItem</A></TD>
                <TD>Adds a specified item to the Atom if it is of a type which contains other Atoms.</TD></TR>
              <TR vAlign=top>
                <TD align=left><A 
                  href="1-methods/getdata.htm">GetData</A></TD>
                <TD>The byte array representation of the Atom as it would appear in a PDF.</TD></TR>
              <TR vAlign=top>
                <TD align=left><A 
                  href="1-methods/1-clone.htm">Clone</A></TD>
                <TD>Creates a deep copy of the current Atom.</TD></TR>
              <TR vAlign=top>
                <TD align=left><A 
                  href="1-methods/2-dispose.htm">Dispose</A></TD>
                <TD>Dispose of the object.</TD></TR>
              <TR vAlign=top>
                <TD align=left><A 
                  href="1-methods/3-equals.htm">Equals</A></TD>
                <TD>Test whether the two Atoms are the same.</TD></TR>
              <TR vAlign=top>
                <TD align=left><A 
                  href="1-methods/5-gethashcode.htm">GetHashCode</A></TD>
                <TD>A hash code for the Atom.</TD></TR>
              <TR vAlign=top>
                <TD align=left><A 
                  href="1-methods/tostring.htm">ToString</A></TD>
                <TD>The string representation of the Atom as it would appear in a PDF.</TD></TR>
<!-- autogen end -->
</table>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr> 
    <td valign="top">&nbsp; </td>
    <td width="14">&nbsp;</td>
    <td valign="top"> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="sectheader"> 
            <table class="wsgtable" cellpadding="3" cellspacing="0" border="5" bordercolor="#FFFFFF">
              <tr> 
                <td align="center" width="100"><b>Property</b></td>
                <td><b>Description</b></td>
              </tr>
              <tr> 
                <td align="center" width="100">none</td>
                <td>&nbsp;</td>
              </tr>
              <!--PROPINS -->
            </table>
          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
        <tr> 
          <td>&nbsp; </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
