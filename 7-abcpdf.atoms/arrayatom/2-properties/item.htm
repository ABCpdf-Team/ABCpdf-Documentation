<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>ArrayAtom Item Property. Get or set the Atom at the specified index. ABCpdf .NET PDF Library.</TITLE>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="../../../mystyles.css">
<link rel="stylesheet" href="../../../prism.css">
<script src="../../../prism.js"></script>
<META content="MSHTML 6.00.6000.16640" name=GENERATOR></HEAD>
<BODY bgColor=#ffffff>
<TABLE cellSpacing=4 cellPadding=0 border=0>
  <TBODY>
  <TR>
    <TD vAlign=top><IMG height=60 src="../../../images/goo.gif" width=58></TD>
    <TD width=14>&nbsp;</TD>
    <TD>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD class=pageheader>Item Property</TD>
          <TD width=60>&nbsp;</TD>
          <TD>&nbsp;</TD></TR>
        <TR>
          <TD background=../../../images/steel-line-3.gif height=11></TD>
          <TD width=60 background=../../../images/steel-line-3.gif 
          height=11></TD>
          <TD height=11><IMG height=11 src="../../../images/steel-blob-11.gif" 
            width=11></TD></TR>
        <TR>
          <TD>
            <P>&nbsp;</P>
            <TABLE class=wsgtable borderColor=#ffffff cellSpacing=0 
            cellPadding=3 border=5>
              <TBODY>
              <TR>
                <TD align=middle><B>Type</B></TD>
                <TD><B>Default</B></TD>
                <TD><B>Read Only</B></TD>
                <TD><B>Description</B></TD></TR>
              <TR vAlign=top>
                <TD align=left><SPAN class=language>[C#]</SPAN><BR><CODE><A
                  href="../../1-atom/default.htm">Atom</A> 
                  this[int index]</CODE><BR><CODE>int this[int index, int 
                  def]</CODE><BR><CODE>double this[int index, double 
                  def]</CODE><BR><CODE>string this[int index, string def]<br>
                  string this[int index, Enum def]<br>
                  byte[] this[int index, byte[] def]</CODE> 
                  <BR>
                  <BR><SPAN 
                  class=language>[Visual&nbsp;Basic]</SPAN><BR><CODE>Default 
                  Property Item(index As Integer) As <A
                  href="../../1-atom/default.htm">Atom</A></CODE><BR><CODE>Default
                  Property Item(index As Integer, def As Integer) As
                  Integer</CODE><BR><CODE>Default Property Item(index As Integer,
                  def As Double) As Double</CODE><BR>
                  <CODE>Default Property
                  Item(index As Integer, def As String) As String<br>
                  Default Property
                  Item(index As Integer, def As Enum) As String<br>
                  Default Property
                  Item(index As Integer, def As Byte()) As Byte()</CODE></TD>
                <TD>&nbsp;n/a&nbsp;</TD>
                <TD>No</TD>
                <TD>Get or set the Atom at the specified 
            index.</TD></TR></TBODY></TABLE>
            <P><CODE><IMG height=10 alt="Throws Exceptions" 
            src="../../../images/steel-blob-10.gif" width=10 border=0> may throw 
            ArgumentOutOfRangeException()</CODE></P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../images/steel-pin.gif" width=64><BR>Notes</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <P>Gets or sets the Atom at the specified index. In C# this property 
            is the indexer for the class.</P>
            <P>You can access an Atom directly or you can use one of the 
            overloaded operators to specify numbers or strings. Using the 
            overloads to access numbers or strings is more efficient than 
            accessing an Atom and extracting the value from it.</P>
            <P>You specify one of the overloads using the def parameter. If you 
            are setting a value then this parameter is ignored. If you are 
            getting a value then this parameter becomes the default value to be 
            used if the underlying Atom was not the correct type. For example 
            the default would be returned if you attempted to get an integer but 
            the underlying Atom was actually a <A 
            href="../../stringatom/default.htm">StringAtom</A>.</P>
            <P>The integer and double overload allow access to NumAtoms. The string overload allows access to StringAtom values while the Enum overload allows access to NameAtom values. Any Enum may be used and if the entry is not valid or available the string value of the Enum will be returned. The byte[] overload allows access to the raw data of the atom.</P>
            <P>Atoms can exist in only one place at a time. If the Atom supplied 
            is already contained by another object then a <A 
            href="../../1-atom/1-methods/1-clone.htm">Clone</A> of the Atom is 
            added.</P>
            <P>Adding a null value will result in a <A 
            href="../../nullatom/default.htm">NullAtom</A> being added to the 
            array. </P>
            <P>If the index is not a valid index this property throws an 
            ArgumentOutOfRangeException.</P>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR>
  <TR>
    <TD class=sectheader vAlign=top><IMG height=10 
      src="../../../images/steel-pin.gif" width=64><BR>Example</TD>
    <TD width=14>&nbsp;</TD>
    <TD vAlign=top>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR>
          <TD>
            <p>None.</p>
            <P>&nbsp;</P></TD>
          <TD width=60>&nbsp;</TD>
          <TD width=11>&nbsp;</TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE>
<P>&nbsp;</P></BODY></HTML>
