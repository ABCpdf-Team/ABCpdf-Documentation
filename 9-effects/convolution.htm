<html>
<head>
<title>Convolution Effect</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="../mystyles.css">
<link rel="stylesheet" href="../prism.css">
<script src="../prism.js"></script></head>

<body bgcolor="#FFFFFF">
<table border="0" cellpadding="0" cellspacing="4">
  <tr> 
    <td valign="top"><img src="../images/goo.gif" width="58" height="60"></td>
    <td width="14">&nbsp;</td>
    <td> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="pageheader"> Convolution Effect</td>
          <td width="60">&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
        <tr> 
          <td background="../images/steel-line-3.gif" height="11"></td>
          <td background="../images/steel-line-3.gif" height="11" width="60"></td>
          <td height="11"><img src="../images/steel-blob-11.gif" width="11" height="11"></td>
        </tr>
        <tr> 
          <td> 
            <p>The Convolution Effect allows you to produce a range of effects by specifying a set of convolution kernels. A simple explanation is given here but you may wish to refer to other sources for complete descriptions of convolution and how you can use it.</p>
          <p>&nbsp;</p>          </td>
          <td width="60">&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
      </table>    </td>
  </tr>
  <tr> 
    <td valign="top" class="sectheader"><img src="../images/steel-pin.gif" width="64" height="10"><br>
    Settings</td>
    <td width="14">&nbsp;</td>
    <td valign="top"> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td><table class="wsgtable" cellpadding="3" cellspacing="0" border="5" bordercolor="#FFFFFF">
              <tr>
                <td><b>Name</b></td>
                <td><b>Default</b></td>
                <td><b>Description</b></td>
              </tr>
              <tr valign="top">
                <td>Width</td>
                <td>3 pixels</td>
                <td><p>The width of the  filter to be applied.</p>                </td>
              </tr>
              <tr valign="top">
                <td>Height</td>
                <td>3 pixels</td>
                <td>The height of the  filter to be applied.</td>
              </tr>
              <tr valign="top">
                <td>X</td>
                <td>2 pixels</td>
                <td>The horizontal center of the filter in pixels from top left.</td>
              </tr>
              <tr valign="top">
                <td>Y</td>
                <td>2 pixels</td>
                <td>The vertical center of the filter in pixels from top left.</td>
              </tr>
              <tr valign="top">
                <td>Number</td>
                <td>2</td>
                <td>The number of kernels to apply.</td>
              </tr>
              <tr valign="top">
                <td>Values</td>
                <td>See desc.</td>
                <td>The values for the kernels in a comma delimited list. The 
                  items in the list may be integers or floating point numbers.
                <p>The default value is: &quot;-1,0,1,-2,0,2,-1,0,1,1,2,1,0,0,0,-1,-2,-1&quot;</p></td>
              </tr>
            </table>
            <p>&nbsp;</p>
            </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>    </td>
  </tr>
  <tr> 
    <td valign="top" class="sectheader"><img src="../images/steel-pin.gif" width="64" height="10"><br>
    Workings</td>
    <td width="14">&nbsp;</td>
    <td valign="top"> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td> 
            <p>Convolution is a general purpose filter effect for images. It works 
              by determining the value of a central pixel by adding the weighted 
              values of all its neighbors together. The weights applied to each 
            pixel are determined by what is called a convolution kernel. </p>
            <p>So if you want to take the average of all the immediate neighbors 
              of a central pixel you would specify an equally weighted convolution 
              kernel. Note that the total sum of all the weights is one so that 
              the overall brightness of the image is not affected by the convolution. 
              Note that the anchor point is highlighted to show which pixel should 
              be regarded as central.</p>
            <table border="0">
              <tr>
                <td width="60">&nbsp;</td>
                <td><table class="wsgtable" cellpadding="3" cellspacing="0" border="5" bordercolor="#FFFFFF">

                    <tr valign="top">
                      <td align="center">0.1111</td>
                      <td>0.1111</td>
                      <td>0.1111</td>
                    </tr>

                    <tr valign="top">
                      <td align="center">0.1111</td>
                      <td><b>0.1112</b></td>
                      <td>0.1111</td>
                    </tr>

                    <tr valign="top">
                      <td align="center">0.1111</td>
                      <td>0.1111</td>
                      <td>0.1111</td>
                    </tr>

                </table></td>
              </tr>
            </table>
            <p>If you wanted to take the average of the pixels immediately above, 
              below and to the sides of the central pixel, and you wanted to exclude 
              the central pixel itself, you would specify the following kernel.</p>
            <table border="0">
              <tr>
                <td width="60">&nbsp;</td>
                <td><table class="wsgtable" cellpadding="3" cellspacing="0" border="5" bordercolor="#FFFFFF">

                    <tr valign="top">
                      <td align="center">0.0000</td>
                      <td>0.2500</td>
                      <td>0.0000</td>
                    </tr>

                    <tr valign="top">
                      <td align="center">0.2500</td>
                      <td><b>0.0000</b></td>
                      <td>0.2500</td>
                    </tr>

                    <tr valign="top">
                      <td align="center">0.0000</td>
                      <td>0.2500</td>
                      <td>0.0000</td>
                    </tr>

                </table></td>
              </tr>
            </table>
            <p>Although a three square kernel with the anchor at the center is 
              most common, you can use other shapes of kernel. For example the 
              following convolution will shift the entire image left by one pixel. </p>
            <table border="0">
              <tr>
                <td width="60">&nbsp;</td>
                <td><table class="wsgtable" cellpadding="3" cellspacing="0" border="5" bordercolor="#FFFFFF">

                    <tr valign="top">
                      <td align="center"><b>0.0000</b></td>
                      <td>1.0000</td>
                    </tr>

                </table></td>
              </tr>
            </table>
            <p>When you specify values you specify them from left to right and 
              then from top to bottom. You can specify more than one filter at 
              a time and the results will be added together. </p>
            <p>The default kernel is a standard Sobel edge detector. This contains 
              two filters - one vertical, one horizontal - to be applied and then 
              added together. The two kernel values are:</p>
            <table border="0">
              <tr>
                <td width="60">&nbsp;</td>
                <td><table class="wsgtable" cellpadding="3" cellspacing="0" border="5" bordercolor="#FFFFFF">

                    <tr valign="top">
                      <td align="center">-1</td>
                      <td>0</td>
                      <td>1</td>
                    </tr>

                    <tr valign="top">
                      <td align="center">-2</td>
                      <td><b>0</b></td>
                      <td>2</td>
                    </tr>

                    <tr valign="top">
                      <td align="center">-1</td>
                      <td>0</td>
                      <td>1</td>
                    </tr>

                </table></td>
                <td width="60">&nbsp;</td>
                <td><table class="wsgtable" cellpadding="3" cellspacing="0" border="5" bordercolor="#FFFFFF">

                    <tr valign="top">
                      <td align="center">1</td>
                      <td>2</td>
                      <td>1</td>
                    </tr>

                    <tr valign="top">
                      <td align="center">0</td>
                      <td><b>0</b></td>
                      <td>0</td>
                    </tr>

                    <tr valign="top">
                      <td align="center">-1</td>
                      <td>-2</td>
                      <td>-1</td>
                    </tr>

                </table></td>
              </tr>
            </table>
          <p>&nbsp;</p>          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>    </td>
  </tr>
  <tr> 
    <td valign="top" class="sectheader"><img src="../images/steel-pin.gif" width="64" height="10"><br>
    Example</td>
    <td width="14">&nbsp;</td>
    <td valign="top"> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td> 
            <p>The following examples show the effect of the default kernel - a Sobel Edge Detector.</p>
            <p><span class=language>[C#]</span><br>
              <pre><code class="language-csharp">void function() {
&nbsp;&nbsp;using (Doc doc = new Doc()) {
&nbsp;&nbsp;&nbsp;&nbsp;AddImagePage(doc, img3); // original image
&nbsp;&nbsp;&nbsp;&nbsp;doc.Rendering.Save("EffectConvolution.jpg");
&nbsp;&nbsp;&nbsp;&nbsp;using (ImageLayer layer = AddImagePage(doc, img3)) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using (EffectOperation effect = new EffectOperation("Convolution")) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the default is a Sobel Edge Detector
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effect.Apply(layer.PixMap);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;doc.Rendering.Save("EffectConvolutionDefault.jpg");
&nbsp;&nbsp;&nbsp;&nbsp;using (ImageLayer layer = AddImagePage(doc, img3)) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;using (EffectOperation effect = new EffectOperation("Convolution")) {
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// the following is a high intensity sharpen filter
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double[] k = new double[] { 0, -1, 0, -1, 5, -1, 0, -1, 0 };
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effect.Parameters["Number"].Value = 1;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effect.Parameters["Values"].Values = k;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effect.Apply(layer.PixMap);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;doc.Rendering.Save("EffectConvolutionSharpen.jpg");
&nbsp;&nbsp;}
}
</code></pre><br>
              <span class=language>[Visual Basic]</span><br>
              <pre><code class="language-vbnet">Sub ...
&nbsp;&nbsp;Using doc As New Doc()
&nbsp;&nbsp;&nbsp;&nbsp;AddImagePage(doc, img3)
&nbsp;&nbsp;&nbsp;&nbsp;' original image
&nbsp;&nbsp;&nbsp;&nbsp;doc.Rendering.Save("EffectConvolution.jpg")
&nbsp;&nbsp;&nbsp;&nbsp;Using layer As ImageLayer = AddImagePage(doc, img3)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Using effect As New EffectOperation("Convolution")
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' the default is a Sobel Edge Detector
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effect.Apply(layer.PixMap)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End Using
&nbsp;&nbsp;&nbsp;&nbsp;End Using
&nbsp;&nbsp;&nbsp;&nbsp;doc.Rendering.Save("EffectConvolutionDefault.jpg")
&nbsp;&nbsp;&nbsp;&nbsp;Using layer As ImageLayer = AddImagePage(doc, img3)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Using effect As New EffectOperation("Convolution")
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' the following is a high intensity sharpen filter
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim k As Double() = New Double() {0, -1, 0, -1, 5, -1, _
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0, -1, 0}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effect.Parameters("Number").Value = 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effect.Parameters("Values").Values = k
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;effect.Apply(layer.PixMap)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End Using
&nbsp;&nbsp;&nbsp;&nbsp;End Using
&nbsp;&nbsp;&nbsp;&nbsp;doc.Rendering.Save("EffectConvolutionSharpen.jpg")
&nbsp;&nbsp;End Using
End Sub
</code></pre>            </p>
            <p>&nbsp;</p>
          <p><img src="images/astroflag.jpg" width="259" height="243"><br>
Original Image</p>
          <p><img src="images/convolution/sobel.jpg" width="259" height="243"><br>
After Convolution Applied</p></td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>    </td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
