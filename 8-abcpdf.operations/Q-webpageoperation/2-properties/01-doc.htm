<html>
<head>
<title>WebPageOperation Doc Property</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="../../../mystyles.css">
<link rel="stylesheet" href="../../../prism.css">
<script src="../../../prism.js"></script></head>

<body bgcolor="#FFFFFF">
<table border="0" cellpadding="0" cellspacing="4">
  <tr> 
    <td valign="top"><img src="../../../images/goo.gif" width="58" height="60"></td>
    <td width="14">&nbsp;</td>
    <td> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td class="pageheader"> Doc Property</td>
          <td width="60">&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
        <tr> 
          <td background="../../../images/steel-line-3.gif" height="11"></td>
          <td background="../../../images/steel-line-3.gif" height="11" width="60"></td>
          <td height="11"><img src="../../../images/steel-blob-11.gif" width="11" height="11"></td>
        </tr>
        <tr> 
          <td> 
            <p>&nbsp;</p>
            <table class="wsgtable" cellpadding="3" cellspacing="0" border="5" bordercolor="#FFFFFF"> 
              <tr> 
                <td align="center"><b>Type</b></td>
                <td><b>Default Value</b></td>
                <td><b>Read Only</b></td>
                <td><b>Description</b></td>
              </tr>
              <tr valign="top"> 
                <td align="left"><span class="language">[C#]</span><br>
                  <code>Doc</code><br>
                  <br>
                  <span class="language">[Visual&nbsp;Basic]</span><br>
                  <code>Doc</code></td>
                <td>n/a</td>
                <td>No</td>
                <td>The Doc object on which to operate.</td>
              </tr>
            </table>
			
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td>&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr> 
    <td valign="top" class="sectheader"><img src="../../../images/steel-pin.gif" width="64" height="10"><br>Notes</td>
    <td width="14">&nbsp;</td>
    <td valign="top"> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td> 
            <p>The Doc object on which to operate.            </p>
            <p>On creation of the WebPageOperation this property will be populated with a new Doc object.</p>
            <p>Set the Doc.MediaBox to select a page size. Select a Doc.Rect to set the content area. Items outside the Doc.Rect become margins and can be used for <a href="04-headerhtml.htm">headers</a> and <a href="05-footerhtml.htm">footers</a>.</p>
            <p>You can set  Doc.HtmlOptions properties to specify features you wish to use. For calls like <a href="/5-abcpdf/xhtmloptions/1-methods/gettagids.htm">GetTagIDs</a> or <a href="/5-abcpdf/xhtmloptions/1-methods/gettagrects.htm">GetTagRects</a> you can pass the relevant Doc.Page  to select the specific page you require.</p>
            <p>&nbsp;</p>
          </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
  <tr> 
    <td valign="top" class="sectheader"><img src="../../../images/steel-pin.gif" width="64" height="10"><br>Example</td>
    <td width="14">&nbsp;</td>
    <td valign="top"> 
      <table border="0" width="100%" cellpadding="0" cellspacing="0">
        <tr> 
          <td><p>The following code creates a PDF document from HTML and outlines any tagged areas.</p>
            <p><span class="language">[C#]</span><br>
            <pre><code class="language-csharp">var op = new WebPageOperation();
using (op.Doc) {
&nbsp;&nbsp;op.Doc.Rect.Inset(72, 72);
&nbsp;&nbsp;op.Doc.HtmlOptions.AddTags = true;
&nbsp;&nbsp;op.Doc.HtmlOptions.RetryCount = 0;
&nbsp;&nbsp;op.Tagged = true;
&nbsp;&nbsp;op.Outline = true;
&nbsp;&nbsp;string template = "&lt;html&gt;&lt;body&gt;&lt;div style=\"width:100%;font-size:14pt;text-align:center;\"&gt;*&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;";
&nbsp;&nbsp;op.HeaderHtml = template.Replace("*", "Commentarii de Bello Gallico");
&nbsp;&nbsp;op.FooterHtml = template.Replace("*", "&lt;span class=pageNumber&gt;&lt;/span&gt; of &lt;span class=totalPages&gt;&lt;/span&gt;");
&nbsp;&nbsp;op.ReadUrl(GetUrl("commentarii.htm"));
&nbsp;&nbsp;var tagIDs = op.Doc.HtmlOptions.GetTagIDs(op.Doc.Page);
&nbsp;&nbsp;var tagRects = op.Doc.HtmlOptions.GetTagRects(op.Doc.Page);
&nbsp;&nbsp;for (int i = 0; i &lt; tagIDs.Length; ++i) {
&nbsp;&nbsp;&nbsp;&nbsp;op.Doc.Rect.String = tagRects[i].String;
&nbsp;&nbsp;&nbsp;&nbsp;op.Doc.FrameRect();
&nbsp;&nbsp;&nbsp;&nbsp;op.Doc.FontSize = (int)(0.9 * op.Doc.Rect.Height);
&nbsp;&nbsp;&nbsp;&nbsp;op.Doc.AddText(tagIDs[i]);
&nbsp;&nbsp;}
&nbsp;&nbsp;op.Doc.Save(Server.MapPath("webpageop.pdf"));
}
</code></pre>
            <br>
            <span class="language">[Visual Basic]</span><br>
            <pre><code class="language-vbnet">Dim op = New WebPageOperation()
Using op.Doc
&nbsp;&nbsp;op.Doc.Rect.Inset(72, 72)
&nbsp;&nbsp;op.Doc.HtmlOptions.AddTags = True
&nbsp;&nbsp;op.Doc.HtmlOptions.RetryCount = 0
&nbsp;&nbsp;op.Tagged = True
&nbsp;&nbsp;op.Outline = True
&nbsp;&nbsp;Dim template As String = "&lt;html&gt;&lt;body&gt;&lt;div style=""width:100%;font-size:14pt;text-align:center;""&gt;*&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"
&nbsp;&nbsp;op.HeaderHtml = template.Replace("*", "Commentarii de Bello Gallico")
&nbsp;&nbsp;op.FooterHtml = template.Replace("*", "&lt;span class=pageNumber&gt;&lt;/span&gt; of &lt;span class=totalPages&gt;&lt;/span&gt;")
&nbsp;&nbsp;op.ReadUrl(GetUrl("commentarii.htm"))
&nbsp;&nbsp;Dim tagIDs = op.Doc.HtmlOptions.GetTagIDs(op.Doc.Page)
&nbsp;&nbsp;Dim tagRects = op.Doc.HtmlOptions.GetTagRects(op.Doc.Page)
&nbsp;&nbsp;Dim i As Integer = 0
&nbsp;&nbsp;While i &lt; tagIDs.Length
&nbsp;&nbsp;&nbsp;&nbsp;op.Doc.Rect.String = tagRects(i).[String]
&nbsp;&nbsp;&nbsp;&nbsp;op.Doc.FrameRect()
&nbsp;&nbsp;&nbsp;&nbsp;op.Doc.FontSize = DirectCast(0.9 * op.Doc.Rect.Height, Integer)
&nbsp;&nbsp;&nbsp;&nbsp;op.Doc.AddText(tagIDs(i))
&nbsp;&nbsp;&nbsp;&nbsp;System.Threading.Interlocked.Increment(i)
&nbsp;&nbsp;End While
&nbsp;&nbsp;op.Doc.Save(Server.MapPath("webpageop.pdf"))
End Using
</code></pre>
            </p>
            <p>&nbsp;</p>
            <p>&nbsp;</p>
            </td>
          <td width="60">&nbsp;</td>
          <td width="11">&nbsp;</td>
        </tr>
      </table>
    </td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
